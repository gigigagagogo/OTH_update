Grammar

    0 $accept: START $end

    1 START: global_declaration
    2      | START global_declaration

    3 global_declaration: function_def
    4                   | statement ';'

    5 block: T_GO control_blocks T_ALL_SET

    6 control_blocks: control_block
    7               | control_blocks control_block

    8 control_block: if_block
    9              | while_block
   10              | for_block

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

   15 step: expression T_COMMA expression T_COMMA expression

   16 statements: statements statement ';'
   17           | statement ';'

   18 statement: declaration
   19          | assignment
   20          | expression
   21          | block
   22          | T_SENDBACK expression
   23          | T_THROWUP T_LPAREN expression T_RPAREN

   24 declaration: types T_IDENTIFIER
   25            | types T_IDENTIFIER T_FAI expression

   26 assignment: T_IDENTIFIER T_FAI expression
   27           | T_IDENTIFIER '[' expression ']' T_FAI expression

   28 types: T_WHOLEY_TYPE
   29      | T_FLOATY_TYPE
   30      | T_STRING_TYPE
   31      | T_ZIP_TYPE
   32      | T_WHOLEY_TYPE '[' T_WHOLEY ']'
   33      | T_FLOATY_TYPE '[' T_WHOLEY ']'
   34      | T_STRING_TYPE '[' T_WHOLEY ']'

   35 expression: T_WHOLEY
   36           | T_FLOATY
   37           | T_STRING
   38           | T_IDENTIFIER
   39           | function_call
   40           | expression T_NEQUAL expression
   41           | expression T_GEQUAL expression
   42           | expression T_LEQUAL expression
   43           | expression T_PLUS expression
   44           | expression T_MINUS expression
   45           | expression T_DIVIDE expression
   46           | expression T_MULTIPLY expression
   47           | expression T_LESS expression
   48           | expression T_GREATER expression
   49           | expression T_EQUAL expression
   50           | T_LPAREN expression T_RPAREN
   51           | T_IDENTIFIER '[' expression ']'
   52           | T_SIZE_UP T_LPAREN expression T_RPAREN
   53           | expression T_AND expression
   54           | expression T_OR expression
   55           | T_GIMME T_LPAREN types T_RPAREN
   56           | T_RANDO T_LPAREN expression T_COMMA expression T_RPAREN
   57           | T_JOIN_IN T_LPAREN T_IDENTIFIER T_COMMA expression T_RPAREN

   58 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

   59 function_call: T_IDENTIFIER T_LPAREN arg_list T_RPAREN

   60 param_list: types T_IDENTIFIER
   61           | param_list T_COMMA types T_IDENTIFIER
   62           | ε

   63 arg_list: expression
   64         | arg_list T_COMMA expression
   65         | ε


Terminals, with rules where they appear

    $end (0) 0
    ';' (59) 4 16 17
    '[' (91) 27 32 33 34 51
    ']' (93) 27 32 33 34 51
    error (256)
    T_WHOLEY <num> (258) 32 33 34 35
    T_FLOATY <fnum> (259) 36
    T_IDENTIFIER <id> (260) 14 24 25 26 27 38 51 57 58 59 60 61
    T_STRING <str> (261) 37
    T_PLUS <op> (262) 43
    T_MINUS <op> (263) 44
    T_MULTIPLY <op> (264) 46
    T_DIVIDE <op> (265) 45
    T_LESS <op> (266) 47
    T_GREATER <op> (267) 48
    T_GEQUAL <op> (268) 41
    T_LEQUAL <op> (269) 42
    T_SENDBACK <str> (270) 22
    T_THROWUP <str> (271) 23
    T_GO <str> (272) 5
    T_ALL_SET <str> (273) 5
    T_IMAGINE <str> (274) 11 12
    T_NAH <str> (275) 12
    T_ONE_BY_ONE <str> (276) 14
    T_AS_LONG_AS <str> (277) 13
    T_IN <str> (278) 14
    T_LPAREN <str> (279) 11 12 13 14 23 50 52 55 56 57 58 59
    T_RPAREN <str> (280) 11 12 13 14 23 50 52 55 56 57 58 59
    T_LCURPAR <str> (281) 11 12 13 14 58
    T_RCURPAR <str> (282) 11 12 13 14 58
    T_A_NEW_ONE <str> (283) 58
    T_ZIP_TYPE <str> (284) 31
    T_COMMA <str> (285) 15 56 57 61 64
    T_WHOLEY_TYPE <str> (286) 28 32
    T_FLOATY_TYPE <str> (287) 29 33
    T_STRING_TYPE <str> (288) 30 34
    T_EQUAL <str> (289) 49
    T_RANDO <str> (290) 56
    T_GIMME <str> (291) 55
    T_SIZE_UP <str> (292) 52
    T_JOIN_IN <str> (293) 57
    T_FAI (294) 25 26 27
    T_NEQUAL (295) 40
    T_OR (296) 54
    T_AND (297) 53


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    START <ast> (47)
        on left: 1 2
        on right: 0 2
    global_declaration <ast> (48)
        on left: 3 4
        on right: 1 2
    block <ast> (49)
        on left: 5
        on right: 21
    control_blocks <ast> (50)
        on left: 6 7
        on right: 5 7
    control_block <ast> (51)
        on left: 8 9 10
        on right: 6 7
    if_block <ast> (52)
        on left: 11 12
        on right: 8
    while_block <ast> (53)
        on left: 13
        on right: 9
    for_block <ast> (54)
        on left: 14
        on right: 10
    step <ast> (55)
        on left: 15
        on right: 14
    statements <ast> (56)
        on left: 16 17
        on right: 11 12 13 14 16 58
    statement <ast> (57)
        on left: 18 19 20 21 22 23
        on right: 4 16 17
    declaration <ast> (58)
        on left: 24 25
        on right: 18
    assignment <ast> (59)
        on left: 26 27
        on right: 19
    types <ast> (60)
        on left: 28 29 30 31 32 33 34
        on right: 24 25 55 58 60 61
    expression <ast> (61)
        on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
        on right: 11 12 13 15 20 22 23 25 26 27 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 56 57 63 64
    function_def <ast> (62)
        on left: 58
        on right: 3
    function_call <ast> (63)
        on left: 59
        on right: 39
    param_list <ast> (64)
        on left: 60 61 62
        on right: 58 61
    arg_list <ast> (65)
        on left: 63 64 65
        on right: 59 64


State 0

    0 $accept: • START $end

    T_WHOLEY       shift, and go to state 1
    T_FLOATY       shift, and go to state 2
    T_IDENTIFIER   shift, and go to state 3
    T_STRING       shift, and go to state 4
    T_SENDBACK     shift, and go to state 5
    T_THROWUP      shift, and go to state 6
    T_GO           shift, and go to state 7
    T_LPAREN       shift, and go to state 8
    T_A_NEW_ONE    shift, and go to state 9
    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13
    T_RANDO        shift, and go to state 14
    T_GIMME        shift, and go to state 15
    T_SIZE_UP      shift, and go to state 16
    T_JOIN_IN      shift, and go to state 17

    START               go to state 18
    global_declaration  go to state 19
    block               go to state 20
    statement           go to state 21
    declaration         go to state 22
    assignment          go to state 23
    types               go to state 24
    expression          go to state 25
    function_def        go to state 26
    function_call       go to state 27


State 1

   35 expression: T_WHOLEY •

    $default  reduce using rule 35 (expression)


State 2

   36 expression: T_FLOATY •

    $default  reduce using rule 36 (expression)


State 3

   26 assignment: T_IDENTIFIER • T_FAI expression
   27           | T_IDENTIFIER • '[' expression ']' T_FAI expression
   38 expression: T_IDENTIFIER •
   51           | T_IDENTIFIER • '[' expression ']'
   59 function_call: T_IDENTIFIER • T_LPAREN arg_list T_RPAREN

    T_LPAREN  shift, and go to state 28
    T_FAI     shift, and go to state 29
    '['       shift, and go to state 30

    $default  reduce using rule 38 (expression)


State 4

   37 expression: T_STRING •

    $default  reduce using rule 37 (expression)


State 5

   22 statement: T_SENDBACK • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 32
    function_call  go to state 27


State 6

   23 statement: T_THROWUP • T_LPAREN expression T_RPAREN

    T_LPAREN  shift, and go to state 33


State 7

    5 block: T_GO • control_blocks T_ALL_SET

    T_IMAGINE     shift, and go to state 34
    T_ONE_BY_ONE  shift, and go to state 35
    T_AS_LONG_AS  shift, and go to state 36

    control_blocks  go to state 37
    control_block   go to state 38
    if_block        go to state 39
    while_block     go to state 40
    for_block       go to state 41


State 8

   50 expression: T_LPAREN • expression T_RPAREN

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 42
    function_call  go to state 27


State 9

   58 function_def: T_A_NEW_ONE • types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13

    types  go to state 43


State 10

   31 types: T_ZIP_TYPE •

    $default  reduce using rule 31 (types)


State 11

   28 types: T_WHOLEY_TYPE •
   32      | T_WHOLEY_TYPE • '[' T_WHOLEY ']'

    '['  shift, and go to state 44

    $default  reduce using rule 28 (types)


State 12

   29 types: T_FLOATY_TYPE •
   33      | T_FLOATY_TYPE • '[' T_WHOLEY ']'

    '['  shift, and go to state 45

    $default  reduce using rule 29 (types)


State 13

   30 types: T_STRING_TYPE •
   34      | T_STRING_TYPE • '[' T_WHOLEY ']'

    '['  shift, and go to state 46

    $default  reduce using rule 30 (types)


State 14

   56 expression: T_RANDO • T_LPAREN expression T_COMMA expression T_RPAREN

    T_LPAREN  shift, and go to state 47


State 15

   55 expression: T_GIMME • T_LPAREN types T_RPAREN

    T_LPAREN  shift, and go to state 48


State 16

   52 expression: T_SIZE_UP • T_LPAREN expression T_RPAREN

    T_LPAREN  shift, and go to state 49


State 17

   57 expression: T_JOIN_IN • T_LPAREN T_IDENTIFIER T_COMMA expression T_RPAREN

    T_LPAREN  shift, and go to state 50


State 18

    0 $accept: START • $end
    2 START: START • global_declaration

    $end           shift, and go to state 51
    T_WHOLEY       shift, and go to state 1
    T_FLOATY       shift, and go to state 2
    T_IDENTIFIER   shift, and go to state 3
    T_STRING       shift, and go to state 4
    T_SENDBACK     shift, and go to state 5
    T_THROWUP      shift, and go to state 6
    T_GO           shift, and go to state 7
    T_LPAREN       shift, and go to state 8
    T_A_NEW_ONE    shift, and go to state 9
    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13
    T_RANDO        shift, and go to state 14
    T_GIMME        shift, and go to state 15
    T_SIZE_UP      shift, and go to state 16
    T_JOIN_IN      shift, and go to state 17

    global_declaration  go to state 52
    block               go to state 20
    statement           go to state 21
    declaration         go to state 22
    assignment          go to state 23
    types               go to state 24
    expression          go to state 25
    function_def        go to state 26
    function_call       go to state 27


State 19

    1 START: global_declaration •

    $default  reduce using rule 1 (START)


State 20

   21 statement: block •

    $default  reduce using rule 21 (statement)


State 21

    4 global_declaration: statement • ';'

    ';'  shift, and go to state 53


State 22

   18 statement: declaration •

    $default  reduce using rule 18 (statement)


State 23

   19 statement: assignment •

    $default  reduce using rule 19 (statement)


State 24

   24 declaration: types • T_IDENTIFIER
   25            | types • T_IDENTIFIER T_FAI expression

    T_IDENTIFIER  shift, and go to state 54


State 25

   20 statement: expression •
   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 20 (statement)


State 26

    3 global_declaration: function_def •

    $default  reduce using rule 3 (global_declaration)


State 27

   39 expression: function_call •

    $default  reduce using rule 39 (expression)


State 28

   59 function_call: T_IDENTIFIER T_LPAREN • arg_list T_RPAREN

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    $default  reduce using rule 65 (arg_list)

    expression     go to state 67
    function_call  go to state 27
    arg_list       go to state 68


State 29

   26 assignment: T_IDENTIFIER T_FAI • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 69
    function_call  go to state 27


State 30

   27 assignment: T_IDENTIFIER '[' • expression ']' T_FAI expression
   51 expression: T_IDENTIFIER '[' • expression ']'

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 70
    function_call  go to state 27


State 31

   38 expression: T_IDENTIFIER •
   51           | T_IDENTIFIER • '[' expression ']'
   59 function_call: T_IDENTIFIER • T_LPAREN arg_list T_RPAREN

    T_LPAREN  shift, and go to state 28
    '['       shift, and go to state 71

    $default  reduce using rule 38 (expression)


State 32

   22 statement: T_SENDBACK expression •
   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 22 (statement)


State 33

   23 statement: T_THROWUP T_LPAREN • expression T_RPAREN

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 72
    function_call  go to state 27


State 34

   11 if_block: T_IMAGINE • T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE • T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 73


State 35

   14 for_block: T_ONE_BY_ONE • T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 74


State 36

   13 while_block: T_AS_LONG_AS • T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 75


State 37

    5 block: T_GO control_blocks • T_ALL_SET
    7 control_blocks: control_blocks • control_block

    T_ALL_SET     shift, and go to state 76
    T_IMAGINE     shift, and go to state 34
    T_ONE_BY_ONE  shift, and go to state 35
    T_AS_LONG_AS  shift, and go to state 36

    control_block  go to state 77
    if_block       go to state 39
    while_block    go to state 40
    for_block      go to state 41


State 38

    6 control_blocks: control_block •

    $default  reduce using rule 6 (control_blocks)


State 39

    8 control_block: if_block •

    $default  reduce using rule 8 (control_block)


State 40

    9 control_block: while_block •

    $default  reduce using rule 9 (control_block)


State 41

   10 control_block: for_block •

    $default  reduce using rule 10 (control_block)


State 42

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   50           | T_LPAREN expression • T_RPAREN
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_RPAREN    shift, and go to state 78
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66


State 43

   58 function_def: T_A_NEW_ONE types • T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_IDENTIFIER  shift, and go to state 79


State 44

   32 types: T_WHOLEY_TYPE '[' • T_WHOLEY ']'

    T_WHOLEY  shift, and go to state 80


State 45

   33 types: T_FLOATY_TYPE '[' • T_WHOLEY ']'

    T_WHOLEY  shift, and go to state 81


State 46

   34 types: T_STRING_TYPE '[' • T_WHOLEY ']'

    T_WHOLEY  shift, and go to state 82


State 47

   56 expression: T_RANDO T_LPAREN • expression T_COMMA expression T_RPAREN

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 83
    function_call  go to state 27


State 48

   55 expression: T_GIMME T_LPAREN • types T_RPAREN

    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13

    types  go to state 84


State 49

   52 expression: T_SIZE_UP T_LPAREN • expression T_RPAREN

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 85
    function_call  go to state 27


State 50

   57 expression: T_JOIN_IN T_LPAREN • T_IDENTIFIER T_COMMA expression T_RPAREN

    T_IDENTIFIER  shift, and go to state 86


State 51

    0 $accept: START $end •

    $default  accept


State 52

    2 START: START global_declaration •

    $default  reduce using rule 2 (START)


State 53

    4 global_declaration: statement ';' •

    $default  reduce using rule 4 (global_declaration)


State 54

   24 declaration: types T_IDENTIFIER •
   25            | types T_IDENTIFIER • T_FAI expression

    T_FAI  shift, and go to state 87

    $default  reduce using rule 24 (declaration)


State 55

   43 expression: expression T_PLUS • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 88
    function_call  go to state 27


State 56

   44 expression: expression T_MINUS • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 89
    function_call  go to state 27


State 57

   46 expression: expression T_MULTIPLY • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 90
    function_call  go to state 27


State 58

   45 expression: expression T_DIVIDE • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 91
    function_call  go to state 27


State 59

   47 expression: expression T_LESS • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 92
    function_call  go to state 27


State 60

   48 expression: expression T_GREATER • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 93
    function_call  go to state 27


State 61

   41 expression: expression T_GEQUAL • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 94
    function_call  go to state 27


State 62

   42 expression: expression T_LEQUAL • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 95
    function_call  go to state 27


State 63

   49 expression: expression T_EQUAL • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 96
    function_call  go to state 27


State 64

   40 expression: expression T_NEQUAL • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 97
    function_call  go to state 27


State 65

   54 expression: expression T_OR • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 98
    function_call  go to state 27


State 66

   53 expression: expression T_AND • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 99
    function_call  go to state 27


State 67

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression
   63 arg_list: expression •

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 63 (arg_list)


State 68

   59 function_call: T_IDENTIFIER T_LPAREN arg_list • T_RPAREN
   64 arg_list: arg_list • T_COMMA expression

    T_RPAREN  shift, and go to state 100
    T_COMMA   shift, and go to state 101


State 69

   26 assignment: T_IDENTIFIER T_FAI expression •
   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 26 (assignment)


State 70

   27 assignment: T_IDENTIFIER '[' expression • ']' T_FAI expression
   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   51           | T_IDENTIFIER '[' expression • ']'
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66
    ']'         shift, and go to state 102


State 71

   51 expression: T_IDENTIFIER '[' • expression ']'

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 103
    function_call  go to state 27


State 72

   23 statement: T_THROWUP T_LPAREN expression • T_RPAREN
   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_RPAREN    shift, and go to state 104
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66


State 73

   11 if_block: T_IMAGINE T_LPAREN • expression T_RPAREN T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN • expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 105
    function_call  go to state 27


State 74

   14 for_block: T_ONE_BY_ONE T_LPAREN • T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_IDENTIFIER  shift, and go to state 106


State 75

   13 while_block: T_AS_LONG_AS T_LPAREN • expression T_RPAREN T_LCURPAR statements T_RCURPAR

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 107
    function_call  go to state 27


State 76

    5 block: T_GO control_blocks T_ALL_SET •

    $default  reduce using rule 5 (block)


State 77

    7 control_blocks: control_blocks control_block •

    $default  reduce using rule 7 (control_blocks)


State 78

   50 expression: T_LPAREN expression T_RPAREN •

    $default  reduce using rule 50 (expression)


State 79

   58 function_def: T_A_NEW_ONE types T_IDENTIFIER • T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 108


State 80

   32 types: T_WHOLEY_TYPE '[' T_WHOLEY • ']'

    ']'  shift, and go to state 109


State 81

   33 types: T_FLOATY_TYPE '[' T_WHOLEY • ']'

    ']'  shift, and go to state 110


State 82

   34 types: T_STRING_TYPE '[' T_WHOLEY • ']'

    ']'  shift, and go to state 111


State 83

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression
   56           | T_RANDO T_LPAREN expression • T_COMMA expression T_RPAREN

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_COMMA     shift, and go to state 112
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66


State 84

   55 expression: T_GIMME T_LPAREN types • T_RPAREN

    T_RPAREN  shift, and go to state 113


State 85

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   52           | T_SIZE_UP T_LPAREN expression • T_RPAREN
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_RPAREN    shift, and go to state 114
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66


State 86

   57 expression: T_JOIN_IN T_LPAREN T_IDENTIFIER • T_COMMA expression T_RPAREN

    T_COMMA  shift, and go to state 115


State 87

   25 declaration: types T_IDENTIFIER T_FAI • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 116
    function_call  go to state 27


State 88

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   43           | expression T_PLUS expression •
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58

    $default  reduce using rule 43 (expression)


State 89

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   44           | expression T_MINUS expression •
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58

    $default  reduce using rule 44 (expression)


State 90

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   46           | expression T_MULTIPLY expression •
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    $default  reduce using rule 46 (expression)


State 91

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   45           | expression T_DIVIDE expression •
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    $default  reduce using rule 45 (expression)


State 92

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   47           | expression T_LESS expression •
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 47 (expression)


State 93

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   48           | expression T_GREATER expression •
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 48 (expression)


State 94

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   41           | expression T_GEQUAL expression •
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 41 (expression)


State 95

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   42           | expression T_LEQUAL expression •
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 42 (expression)


State 96

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   49           | expression T_EQUAL expression •
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 49 (expression)


State 97

   40 expression: expression • T_NEQUAL expression
   40           | expression T_NEQUAL expression •
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 40 (expression)


State 98

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression
   54           | expression T_OR expression •

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_AND       shift, and go to state 66

    $default  reduce using rule 54 (expression)


State 99

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   53           | expression T_AND expression •
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58

    $default  reduce using rule 53 (expression)


State 100

   59 function_call: T_IDENTIFIER T_LPAREN arg_list T_RPAREN •

    $default  reduce using rule 59 (function_call)


State 101

   64 arg_list: arg_list T_COMMA • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 117
    function_call  go to state 27


State 102

   27 assignment: T_IDENTIFIER '[' expression ']' • T_FAI expression
   51 expression: T_IDENTIFIER '[' expression ']' •

    T_FAI  shift, and go to state 118

    $default  reduce using rule 51 (expression)


State 103

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   51           | T_IDENTIFIER '[' expression • ']'
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66
    ']'         shift, and go to state 119


State 104

   23 statement: T_THROWUP T_LPAREN expression T_RPAREN •

    $default  reduce using rule 23 (statement)


State 105

   11 if_block: T_IMAGINE T_LPAREN expression • T_RPAREN T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression • T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR
   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_RPAREN    shift, and go to state 120
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66


State 106

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER • T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_IN  shift, and go to state 121


State 107

   13 while_block: T_AS_LONG_AS T_LPAREN expression • T_RPAREN T_LCURPAR statements T_RCURPAR
   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_RPAREN    shift, and go to state 122
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66


State 108

   58 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN • param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13

    $default  reduce using rule 62 (param_list)

    types       go to state 123
    param_list  go to state 124


State 109

   32 types: T_WHOLEY_TYPE '[' T_WHOLEY ']' •

    $default  reduce using rule 32 (types)


State 110

   33 types: T_FLOATY_TYPE '[' T_WHOLEY ']' •

    $default  reduce using rule 33 (types)


State 111

   34 types: T_STRING_TYPE '[' T_WHOLEY ']' •

    $default  reduce using rule 34 (types)


State 112

   56 expression: T_RANDO T_LPAREN expression T_COMMA • expression T_RPAREN

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 125
    function_call  go to state 27


State 113

   55 expression: T_GIMME T_LPAREN types T_RPAREN •

    $default  reduce using rule 55 (expression)


State 114

   52 expression: T_SIZE_UP T_LPAREN expression T_RPAREN •

    $default  reduce using rule 52 (expression)


State 115

   57 expression: T_JOIN_IN T_LPAREN T_IDENTIFIER T_COMMA • expression T_RPAREN

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 126
    function_call  go to state 27


State 116

   25 declaration: types T_IDENTIFIER T_FAI expression •
   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 25 (declaration)


State 117

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression
   64 arg_list: arg_list T_COMMA expression •

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 64 (arg_list)


State 118

   27 assignment: T_IDENTIFIER '[' expression ']' T_FAI • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 127
    function_call  go to state 27


State 119

   51 expression: T_IDENTIFIER '[' expression ']' •

    $default  reduce using rule 51 (expression)


State 120

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN • T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression T_RPAREN • T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 128


State 121

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN • T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 129


State 122

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 130


State 123

   60 param_list: types • T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 131


State 124

   58 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list • T_RPAREN T_LCURPAR statements T_RCURPAR
   61 param_list: param_list • T_COMMA types T_IDENTIFIER

    T_RPAREN  shift, and go to state 132
    T_COMMA   shift, and go to state 133


State 125

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression
   56           | T_RANDO T_LPAREN expression T_COMMA expression • T_RPAREN

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_RPAREN    shift, and go to state 134
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66


State 126

   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression
   57           | T_JOIN_IN T_LPAREN T_IDENTIFIER T_COMMA expression • T_RPAREN

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_RPAREN    shift, and go to state 135
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66


State 127

   27 assignment: T_IDENTIFIER '[' expression ']' T_FAI expression •
   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 27 (assignment)


State 128

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR • statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR • statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_WHOLEY       shift, and go to state 1
    T_FLOATY       shift, and go to state 2
    T_IDENTIFIER   shift, and go to state 3
    T_STRING       shift, and go to state 4
    T_SENDBACK     shift, and go to state 5
    T_THROWUP      shift, and go to state 6
    T_GO           shift, and go to state 7
    T_LPAREN       shift, and go to state 8
    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13
    T_RANDO        shift, and go to state 14
    T_GIMME        shift, and go to state 15
    T_SIZE_UP      shift, and go to state 16
    T_JOIN_IN      shift, and go to state 17

    block          go to state 20
    statements     go to state 136
    statement      go to state 137
    declaration    go to state 22
    assignment     go to state 23
    types          go to state 24
    expression     go to state 25
    function_call  go to state 27


State 129

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN • step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    step           go to state 138
    expression     go to state 139
    function_call  go to state 27


State 130

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR • statements T_RCURPAR

    T_WHOLEY       shift, and go to state 1
    T_FLOATY       shift, and go to state 2
    T_IDENTIFIER   shift, and go to state 3
    T_STRING       shift, and go to state 4
    T_SENDBACK     shift, and go to state 5
    T_THROWUP      shift, and go to state 6
    T_GO           shift, and go to state 7
    T_LPAREN       shift, and go to state 8
    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13
    T_RANDO        shift, and go to state 14
    T_GIMME        shift, and go to state 15
    T_SIZE_UP      shift, and go to state 16
    T_JOIN_IN      shift, and go to state 17

    block          go to state 20
    statements     go to state 140
    statement      go to state 137
    declaration    go to state 22
    assignment     go to state 23
    types          go to state 24
    expression     go to state 25
    function_call  go to state 27


State 131

   60 param_list: types T_IDENTIFIER •

    $default  reduce using rule 60 (param_list)


State 132

   58 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 141


State 133

   61 param_list: param_list T_COMMA • types T_IDENTIFIER

    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13

    types  go to state 142


State 134

   56 expression: T_RANDO T_LPAREN expression T_COMMA expression T_RPAREN •

    $default  reduce using rule 56 (expression)


State 135

   57 expression: T_JOIN_IN T_LPAREN T_IDENTIFIER T_COMMA expression T_RPAREN •

    $default  reduce using rule 57 (expression)


State 136

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements • T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements • T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR
   16 statements: statements • statement ';'

    T_WHOLEY       shift, and go to state 1
    T_FLOATY       shift, and go to state 2
    T_IDENTIFIER   shift, and go to state 3
    T_STRING       shift, and go to state 4
    T_SENDBACK     shift, and go to state 5
    T_THROWUP      shift, and go to state 6
    T_GO           shift, and go to state 7
    T_LPAREN       shift, and go to state 8
    T_RCURPAR      shift, and go to state 143
    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13
    T_RANDO        shift, and go to state 14
    T_GIMME        shift, and go to state 15
    T_SIZE_UP      shift, and go to state 16
    T_JOIN_IN      shift, and go to state 17

    block          go to state 20
    statement      go to state 144
    declaration    go to state 22
    assignment     go to state 23
    types          go to state 24
    expression     go to state 25
    function_call  go to state 27


State 137

   17 statements: statement • ';'

    ';'  shift, and go to state 145


State 138

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step • T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_RPAREN  shift, and go to state 146


State 139

   15 step: expression • T_COMMA expression T_COMMA expression
   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_COMMA     shift, and go to state 147
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66


State 140

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR statements • T_RCURPAR
   16 statements: statements • statement ';'

    T_WHOLEY       shift, and go to state 1
    T_FLOATY       shift, and go to state 2
    T_IDENTIFIER   shift, and go to state 3
    T_STRING       shift, and go to state 4
    T_SENDBACK     shift, and go to state 5
    T_THROWUP      shift, and go to state 6
    T_GO           shift, and go to state 7
    T_LPAREN       shift, and go to state 8
    T_RCURPAR      shift, and go to state 148
    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13
    T_RANDO        shift, and go to state 14
    T_GIMME        shift, and go to state 15
    T_SIZE_UP      shift, and go to state 16
    T_JOIN_IN      shift, and go to state 17

    block          go to state 20
    statement      go to state 144
    declaration    go to state 22
    assignment     go to state 23
    types          go to state 24
    expression     go to state 25
    function_call  go to state 27


State 141

   58 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR • statements T_RCURPAR

    T_WHOLEY       shift, and go to state 1
    T_FLOATY       shift, and go to state 2
    T_IDENTIFIER   shift, and go to state 3
    T_STRING       shift, and go to state 4
    T_SENDBACK     shift, and go to state 5
    T_THROWUP      shift, and go to state 6
    T_GO           shift, and go to state 7
    T_LPAREN       shift, and go to state 8
    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13
    T_RANDO        shift, and go to state 14
    T_GIMME        shift, and go to state 15
    T_SIZE_UP      shift, and go to state 16
    T_JOIN_IN      shift, and go to state 17

    block          go to state 20
    statements     go to state 149
    statement      go to state 137
    declaration    go to state 22
    assignment     go to state 23
    types          go to state 24
    expression     go to state 25
    function_call  go to state 27


State 142

   61 param_list: param_list T_COMMA types • T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 150


State 143

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR •
   12         | T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR • T_NAH T_LCURPAR statements T_RCURPAR

    T_NAH  shift, and go to state 151

    $default  reduce using rule 11 (if_block)


State 144

   16 statements: statements statement • ';'

    ';'  shift, and go to state 152


State 145

   17 statements: statement ';' •

    $default  reduce using rule 17 (statements)


State 146

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN • T_RPAREN T_LCURPAR statements T_RCURPAR

    T_RPAREN  shift, and go to state 153


State 147

   15 step: expression T_COMMA • expression T_COMMA expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 154
    function_call  go to state 27


State 148

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 13 (while_block)


State 149

   16 statements: statements • statement ';'
   58 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements • T_RCURPAR

    T_WHOLEY       shift, and go to state 1
    T_FLOATY       shift, and go to state 2
    T_IDENTIFIER   shift, and go to state 3
    T_STRING       shift, and go to state 4
    T_SENDBACK     shift, and go to state 5
    T_THROWUP      shift, and go to state 6
    T_GO           shift, and go to state 7
    T_LPAREN       shift, and go to state 8
    T_RCURPAR      shift, and go to state 155
    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13
    T_RANDO        shift, and go to state 14
    T_GIMME        shift, and go to state 15
    T_SIZE_UP      shift, and go to state 16
    T_JOIN_IN      shift, and go to state 17

    block          go to state 20
    statement      go to state 144
    declaration    go to state 22
    assignment     go to state 23
    types          go to state 24
    expression     go to state 25
    function_call  go to state 27


State 150

   61 param_list: param_list T_COMMA types T_IDENTIFIER •

    $default  reduce using rule 61 (param_list)


State 151

   12 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 156


State 152

   16 statements: statements statement ';' •

    $default  reduce using rule 16 (statements)


State 153

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 157


State 154

   15 step: expression T_COMMA expression • T_COMMA expression
   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_COMMA     shift, and go to state 158
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66


State 155

   58 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 58 (function_def)


State 156

   12 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR • statements T_RCURPAR

    T_WHOLEY       shift, and go to state 1
    T_FLOATY       shift, and go to state 2
    T_IDENTIFIER   shift, and go to state 3
    T_STRING       shift, and go to state 4
    T_SENDBACK     shift, and go to state 5
    T_THROWUP      shift, and go to state 6
    T_GO           shift, and go to state 7
    T_LPAREN       shift, and go to state 8
    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13
    T_RANDO        shift, and go to state 14
    T_GIMME        shift, and go to state 15
    T_SIZE_UP      shift, and go to state 16
    T_JOIN_IN      shift, and go to state 17

    block          go to state 20
    statements     go to state 159
    statement      go to state 137
    declaration    go to state 22
    assignment     go to state 23
    types          go to state 24
    expression     go to state 25
    function_call  go to state 27


State 157

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR • statements T_RCURPAR

    T_WHOLEY       shift, and go to state 1
    T_FLOATY       shift, and go to state 2
    T_IDENTIFIER   shift, and go to state 3
    T_STRING       shift, and go to state 4
    T_SENDBACK     shift, and go to state 5
    T_THROWUP      shift, and go to state 6
    T_GO           shift, and go to state 7
    T_LPAREN       shift, and go to state 8
    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13
    T_RANDO        shift, and go to state 14
    T_GIMME        shift, and go to state 15
    T_SIZE_UP      shift, and go to state 16
    T_JOIN_IN      shift, and go to state 17

    block          go to state 20
    statements     go to state 160
    statement      go to state 137
    declaration    go to state 22
    assignment     go to state 23
    types          go to state 24
    expression     go to state 25
    function_call  go to state 27


State 158

   15 step: expression T_COMMA expression T_COMMA • expression

    T_WHOLEY      shift, and go to state 1
    T_FLOATY      shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 4
    T_LPAREN      shift, and go to state 8
    T_RANDO       shift, and go to state 14
    T_GIMME       shift, and go to state 15
    T_SIZE_UP     shift, and go to state 16
    T_JOIN_IN     shift, and go to state 17

    expression     go to state 161
    function_call  go to state 27


State 159

   12 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements • T_RCURPAR
   16 statements: statements • statement ';'

    T_WHOLEY       shift, and go to state 1
    T_FLOATY       shift, and go to state 2
    T_IDENTIFIER   shift, and go to state 3
    T_STRING       shift, and go to state 4
    T_SENDBACK     shift, and go to state 5
    T_THROWUP      shift, and go to state 6
    T_GO           shift, and go to state 7
    T_LPAREN       shift, and go to state 8
    T_RCURPAR      shift, and go to state 162
    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13
    T_RANDO        shift, and go to state 14
    T_GIMME        shift, and go to state 15
    T_SIZE_UP      shift, and go to state 16
    T_JOIN_IN      shift, and go to state 17

    block          go to state 20
    statement      go to state 144
    declaration    go to state 22
    assignment     go to state 23
    types          go to state 24
    expression     go to state 25
    function_call  go to state 27


State 160

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements • T_RCURPAR
   16 statements: statements • statement ';'

    T_WHOLEY       shift, and go to state 1
    T_FLOATY       shift, and go to state 2
    T_IDENTIFIER   shift, and go to state 3
    T_STRING       shift, and go to state 4
    T_SENDBACK     shift, and go to state 5
    T_THROWUP      shift, and go to state 6
    T_GO           shift, and go to state 7
    T_LPAREN       shift, and go to state 8
    T_RCURPAR      shift, and go to state 163
    T_ZIP_TYPE     shift, and go to state 10
    T_WHOLEY_TYPE  shift, and go to state 11
    T_FLOATY_TYPE  shift, and go to state 12
    T_STRING_TYPE  shift, and go to state 13
    T_RANDO        shift, and go to state 14
    T_GIMME        shift, and go to state 15
    T_SIZE_UP      shift, and go to state 16
    T_JOIN_IN      shift, and go to state 17

    block          go to state 20
    statement      go to state 144
    declaration    go to state 22
    assignment     go to state 23
    types          go to state 24
    expression     go to state 25
    function_call  go to state 27


State 161

   15 step: expression T_COMMA expression T_COMMA expression •
   40 expression: expression • T_NEQUAL expression
   41           | expression • T_GEQUAL expression
   42           | expression • T_LEQUAL expression
   43           | expression • T_PLUS expression
   44           | expression • T_MINUS expression
   45           | expression • T_DIVIDE expression
   46           | expression • T_MULTIPLY expression
   47           | expression • T_LESS expression
   48           | expression • T_GREATER expression
   49           | expression • T_EQUAL expression
   53           | expression • T_AND expression
   54           | expression • T_OR expression

    T_PLUS      shift, and go to state 55
    T_MINUS     shift, and go to state 56
    T_MULTIPLY  shift, and go to state 57
    T_DIVIDE    shift, and go to state 58
    T_LESS      shift, and go to state 59
    T_GREATER   shift, and go to state 60
    T_GEQUAL    shift, and go to state 61
    T_LEQUAL    shift, and go to state 62
    T_EQUAL     shift, and go to state 63
    T_NEQUAL    shift, and go to state 64
    T_OR        shift, and go to state 65
    T_AND       shift, and go to state 66

    $default  reduce using rule 15 (step)


State 162

   12 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 12 (if_block)


State 163

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 14 (for_block)
