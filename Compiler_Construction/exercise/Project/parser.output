Grammar

    0 $accept: START $end

    1 START: global_declaration
    2      | START global_declaration

    3 global_declaration: function_def
    4                   | statement ';'

    5 block: T_GO control_blocks T_ALL_SET

    6 control_blocks: control_block
    7               | control_blocks control_block

    8 control_block: if_block
    9              | while_block
   10              | for_block

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

   15 step: expression T_COMMA expression T_COMMA expression

   16 statements: statements statement ';'
   17           | statement ';'

   18 statement: declaration
   19          | assignment
   20          | function_call
   21          | block
   22          | T_SENDBACK expression
   23          | T_THROWUP T_LPAREN expression T_RPAREN
   24          | T_RANDO T_LPAREN expression T_COMMA expression T_RPAREN
   25          | T_GIMME T_LPAREN types T_RPAREN
   26          | T_JOIN_IN T_LPAREN T_IDENTIFIER T_COMMA expression T_RPAREN

   27 declaration: types T_IDENTIFIER
   28            | types T_IDENTIFIER T_FAI expression
   29            | types T_IDENTIFIER T_FAI function_call

   30 assignment: T_IDENTIFIER T_FAI expression
   31           | T_IDENTIFIER T_FAI function_call
   32           | T_IDENTIFIER '[' expression ']' T_FAI expression

   33 types: T_WHOLEY_TYPE
   34      | T_FLOATY_TYPE
   35      | T_STRING_TYPE
   36      | T_ZIP_TYPE
   37      | T_WHOLEY_TYPE '[' T_WHOLEY ']'
   38      | T_FLOATY_TYPE '[' T_WHOLEY ']'
   39      | T_STRING_TYPE '[' T_WHOLEY ']'

   40 expression: T_WHOLEY
   41           | T_FLOATY
   42           | T_STRING
   43           | T_IDENTIFIER
   44           | expression T_NEQUAL expression
   45           | expression T_GEQUAL expression
   46           | expression T_LEQUAL expression
   47           | expression T_PLUS expression
   48           | expression T_MINUS expression
   49           | expression T_DIVIDE expression
   50           | expression T_MULTIPLY expression
   51           | expression T_LESS expression
   52           | expression T_GREATER expression
   53           | expression T_FAI expression
   54           | expression T_EQUAL expression
   55           | T_LPAREN expression T_RPAREN
   56           | T_IDENTIFIER '[' expression ']'
   57           | T_SIZE_UP T_LPAREN T_IDENTIFIER T_RPAREN
   58           | expression T_AND expression
   59           | expression T_OR expression

   60 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

   61 function_call: T_IDENTIFIER T_LPAREN arg_list T_RPAREN

   62 param_list: types T_IDENTIFIER
   63           | param_list T_COMMA types T_IDENTIFIER
   64           | ε

   65 arg_list: expression
   66         | arg_list T_COMMA expression
   67         | ε


Terminals, with rules where they appear

    $end (0) 0
    ';' (59) 4 16 17
    '[' (91) 32 37 38 39 56
    ']' (93) 32 37 38 39 56
    error (256)
    T_WHOLEY <num> (258) 37 38 39 40
    T_FLOATY <fnum> (259) 41
    T_IDENTIFIER <id> (260) 14 26 27 28 29 30 31 32 43 56 57 60 61 62 63
    T_STRING <str> (261) 42
    T_PLUS <op> (262) 47
    T_MINUS <op> (263) 48
    T_MULTIPLY <op> (264) 50
    T_DIVIDE <op> (265) 49
    T_LESS <op> (266) 51
    T_GREATER <op> (267) 52
    T_GEQUAL <op> (268) 45
    T_LEQUAL <op> (269) 46
    T_SENDBACK <str> (270) 22
    T_THROWUP <str> (271) 23
    T_GO <str> (272) 5
    T_ALL_SET <str> (273) 5
    T_IMAGINE <str> (274) 11 12
    T_NAH <str> (275) 12
    T_ONE_BY_ONE <str> (276) 14
    T_AS_LONG_AS <str> (277) 13
    T_IN <str> (278) 14
    T_LPAREN <str> (279) 11 12 13 14 23 24 25 26 55 57 60 61
    T_RPAREN <str> (280) 11 12 13 14 23 24 25 26 55 57 60 61
    T_LCURPAR <str> (281) 11 12 13 14 60
    T_RCURPAR <str> (282) 11 12 13 14 60
    T_A_NEW_ONE <str> (283) 60
    T_ZIP_TYPE <str> (284) 36
    T_COMMA <str> (285) 15 24 26 63 66
    T_WHOLEY_TYPE <str> (286) 33 37
    T_FLOATY_TYPE <str> (287) 34 38
    T_STRING_TYPE <str> (288) 35 39
    T_EQUAL <str> (289) 54
    T_RANDO <str> (290) 24
    T_GIMME <str> (291) 25
    T_SIZE_UP <str> (292) 57
    T_JOIN_IN <str> (293) 26
    T_AND (294) 58
    T_OR (295) 59
    T_FAI (296) 28 29 30 31 32 53
    T_NEQUAL (297) 44


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    START <ast> (47)
        on left: 1 2
        on right: 0 2
    global_declaration <ast> (48)
        on left: 3 4
        on right: 1 2
    block <ast> (49)
        on left: 5
        on right: 21
    control_blocks <ast> (50)
        on left: 6 7
        on right: 5 7
    control_block <ast> (51)
        on left: 8 9 10
        on right: 6 7
    if_block <ast> (52)
        on left: 11 12
        on right: 8
    while_block <ast> (53)
        on left: 13
        on right: 9
    for_block <ast> (54)
        on left: 14
        on right: 10
    step <ast> (55)
        on left: 15
        on right: 14
    statements <ast> (56)
        on left: 16 17
        on right: 11 12 13 14 16 60
    statement <ast> (57)
        on left: 18 19 20 21 22 23 24 25 26
        on right: 4 16 17
    declaration <ast> (58)
        on left: 27 28 29
        on right: 18
    assignment <ast> (59)
        on left: 30 31 32
        on right: 19
    types <ast> (60)
        on left: 33 34 35 36 37 38 39
        on right: 25 27 28 29 60 62 63
    expression <ast> (61)
        on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
        on right: 11 12 13 15 22 23 24 26 28 30 32 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 65 66
    function_def <ast> (62)
        on left: 60
        on right: 3
    function_call <ast> (63)
        on left: 61
        on right: 20 29 31
    param_list <ast> (64)
        on left: 62 63 64
        on right: 60 63
    arg_list <ast> (65)
        on left: 65 66 67
        on right: 61 66


State 0

    0 $accept: • START $end

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_A_NEW_ONE    shift, and go to state 5
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11
    T_JOIN_IN      shift, and go to state 12

    START               go to state 13
    global_declaration  go to state 14
    block               go to state 15
    statement           go to state 16
    declaration         go to state 17
    assignment          go to state 18
    types               go to state 19
    function_def        go to state 20
    function_call       go to state 21


State 1

   30 assignment: T_IDENTIFIER • T_FAI expression
   31           | T_IDENTIFIER • T_FAI function_call
   32           | T_IDENTIFIER • '[' expression ']' T_FAI expression
   61 function_call: T_IDENTIFIER • T_LPAREN arg_list T_RPAREN

    T_LPAREN  shift, and go to state 22
    T_FAI     shift, and go to state 23
    '['       shift, and go to state 24


State 2

   22 statement: T_SENDBACK • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 31


State 3

   23 statement: T_THROWUP • T_LPAREN expression T_RPAREN

    T_LPAREN  shift, and go to state 32


State 4

    5 block: T_GO • control_blocks T_ALL_SET

    T_IMAGINE     shift, and go to state 33
    T_ONE_BY_ONE  shift, and go to state 34
    T_AS_LONG_AS  shift, and go to state 35

    control_blocks  go to state 36
    control_block   go to state 37
    if_block        go to state 38
    while_block     go to state 39
    for_block       go to state 40


State 5

   60 function_def: T_A_NEW_ONE • types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    types  go to state 41


State 6

   36 types: T_ZIP_TYPE •

    $default  reduce using rule 36 (types)


State 7

   33 types: T_WHOLEY_TYPE •
   37      | T_WHOLEY_TYPE • '[' T_WHOLEY ']'

    '['  shift, and go to state 42

    $default  reduce using rule 33 (types)


State 8

   34 types: T_FLOATY_TYPE •
   38      | T_FLOATY_TYPE • '[' T_WHOLEY ']'

    '['  shift, and go to state 43

    $default  reduce using rule 34 (types)


State 9

   35 types: T_STRING_TYPE •
   39      | T_STRING_TYPE • '[' T_WHOLEY ']'

    '['  shift, and go to state 44

    $default  reduce using rule 35 (types)


State 10

   24 statement: T_RANDO • T_LPAREN expression T_COMMA expression T_RPAREN

    T_LPAREN  shift, and go to state 45


State 11

   25 statement: T_GIMME • T_LPAREN types T_RPAREN

    T_LPAREN  shift, and go to state 46


State 12

   26 statement: T_JOIN_IN • T_LPAREN T_IDENTIFIER T_COMMA expression T_RPAREN

    T_LPAREN  shift, and go to state 47


State 13

    0 $accept: START • $end
    2 START: START • global_declaration

    $end           shift, and go to state 48
    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_A_NEW_ONE    shift, and go to state 5
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11
    T_JOIN_IN      shift, and go to state 12

    global_declaration  go to state 49
    block               go to state 15
    statement           go to state 16
    declaration         go to state 17
    assignment          go to state 18
    types               go to state 19
    function_def        go to state 20
    function_call       go to state 21


State 14

    1 START: global_declaration •

    $default  reduce using rule 1 (START)


State 15

   21 statement: block •

    $default  reduce using rule 21 (statement)


State 16

    4 global_declaration: statement • ';'

    ';'  shift, and go to state 50


State 17

   18 statement: declaration •

    $default  reduce using rule 18 (statement)


State 18

   19 statement: assignment •

    $default  reduce using rule 19 (statement)


State 19

   27 declaration: types • T_IDENTIFIER
   28            | types • T_IDENTIFIER T_FAI expression
   29            | types • T_IDENTIFIER T_FAI function_call

    T_IDENTIFIER  shift, and go to state 51


State 20

    3 global_declaration: function_def •

    $default  reduce using rule 3 (global_declaration)


State 21

   20 statement: function_call •

    $default  reduce using rule 20 (statement)


State 22

   61 function_call: T_IDENTIFIER T_LPAREN • arg_list T_RPAREN

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    $default  reduce using rule 67 (arg_list)

    expression  go to state 52
    arg_list    go to state 53


State 23

   30 assignment: T_IDENTIFIER T_FAI • expression
   31           | T_IDENTIFIER T_FAI • function_call

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 54
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression     go to state 55
    function_call  go to state 56


State 24

   32 assignment: T_IDENTIFIER '[' • expression ']' T_FAI expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 57


State 25

   40 expression: T_WHOLEY •

    $default  reduce using rule 40 (expression)


State 26

   41 expression: T_FLOATY •

    $default  reduce using rule 41 (expression)


State 27

   43 expression: T_IDENTIFIER •
   56           | T_IDENTIFIER • '[' expression ']'

    '['  shift, and go to state 58

    $default  reduce using rule 43 (expression)


State 28

   42 expression: T_STRING •

    $default  reduce using rule 42 (expression)


State 29

   55 expression: T_LPAREN • expression T_RPAREN

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 59


State 30

   57 expression: T_SIZE_UP • T_LPAREN T_IDENTIFIER T_RPAREN

    T_LPAREN  shift, and go to state 60


State 31

   22 statement: T_SENDBACK expression •
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73

    $default  reduce using rule 22 (statement)


State 32

   23 statement: T_THROWUP T_LPAREN • expression T_RPAREN

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 74


State 33

   11 if_block: T_IMAGINE • T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE • T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 75


State 34

   14 for_block: T_ONE_BY_ONE • T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 76


State 35

   13 while_block: T_AS_LONG_AS • T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 77


State 36

    5 block: T_GO control_blocks • T_ALL_SET
    7 control_blocks: control_blocks • control_block

    T_ALL_SET     shift, and go to state 78
    T_IMAGINE     shift, and go to state 33
    T_ONE_BY_ONE  shift, and go to state 34
    T_AS_LONG_AS  shift, and go to state 35

    control_block  go to state 79
    if_block       go to state 38
    while_block    go to state 39
    for_block      go to state 40


State 37

    6 control_blocks: control_block •

    $default  reduce using rule 6 (control_blocks)


State 38

    8 control_block: if_block •

    $default  reduce using rule 8 (control_block)


State 39

    9 control_block: while_block •

    $default  reduce using rule 9 (control_block)


State 40

   10 control_block: for_block •

    $default  reduce using rule 10 (control_block)


State 41

   60 function_def: T_A_NEW_ONE types • T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_IDENTIFIER  shift, and go to state 80


State 42

   37 types: T_WHOLEY_TYPE '[' • T_WHOLEY ']'

    T_WHOLEY  shift, and go to state 81


State 43

   38 types: T_FLOATY_TYPE '[' • T_WHOLEY ']'

    T_WHOLEY  shift, and go to state 82


State 44

   39 types: T_STRING_TYPE '[' • T_WHOLEY ']'

    T_WHOLEY  shift, and go to state 83


State 45

   24 statement: T_RANDO T_LPAREN • expression T_COMMA expression T_RPAREN

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 84


State 46

   25 statement: T_GIMME T_LPAREN • types T_RPAREN

    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    types  go to state 85


State 47

   26 statement: T_JOIN_IN T_LPAREN • T_IDENTIFIER T_COMMA expression T_RPAREN

    T_IDENTIFIER  shift, and go to state 86


State 48

    0 $accept: START $end •

    $default  accept


State 49

    2 START: START global_declaration •

    $default  reduce using rule 2 (START)


State 50

    4 global_declaration: statement ';' •

    $default  reduce using rule 4 (global_declaration)


State 51

   27 declaration: types T_IDENTIFIER •
   28            | types T_IDENTIFIER • T_FAI expression
   29            | types T_IDENTIFIER • T_FAI function_call

    T_FAI  shift, and go to state 87

    $default  reduce using rule 27 (declaration)


State 52

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression
   65 arg_list: expression •

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73

    $default  reduce using rule 65 (arg_list)


State 53

   61 function_call: T_IDENTIFIER T_LPAREN arg_list • T_RPAREN
   66 arg_list: arg_list • T_COMMA expression

    T_RPAREN  shift, and go to state 88
    T_COMMA   shift, and go to state 89


State 54

   43 expression: T_IDENTIFIER •
   56           | T_IDENTIFIER • '[' expression ']'
   61 function_call: T_IDENTIFIER • T_LPAREN arg_list T_RPAREN

    T_LPAREN  shift, and go to state 22
    '['       shift, and go to state 58

    $default  reduce using rule 43 (expression)


State 55

   30 assignment: T_IDENTIFIER T_FAI expression •
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73

    $default  reduce using rule 30 (assignment)


State 56

   31 assignment: T_IDENTIFIER T_FAI function_call •

    $default  reduce using rule 31 (assignment)


State 57

   32 assignment: T_IDENTIFIER '[' expression • ']' T_FAI expression
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73
    ']'         shift, and go to state 90


State 58

   56 expression: T_IDENTIFIER '[' • expression ']'

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 91


State 59

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   55           | T_LPAREN expression • T_RPAREN
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_RPAREN    shift, and go to state 92
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73


State 60

   57 expression: T_SIZE_UP T_LPAREN • T_IDENTIFIER T_RPAREN

    T_IDENTIFIER  shift, and go to state 93


State 61

   47 expression: expression T_PLUS • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 94


State 62

   48 expression: expression T_MINUS • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 95


State 63

   50 expression: expression T_MULTIPLY • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 96


State 64

   49 expression: expression T_DIVIDE • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 97


State 65

   51 expression: expression T_LESS • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 98


State 66

   52 expression: expression T_GREATER • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 99


State 67

   45 expression: expression T_GEQUAL • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 100


State 68

   46 expression: expression T_LEQUAL • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 101


State 69

   54 expression: expression T_EQUAL • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 102


State 70

   58 expression: expression T_AND • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 103


State 71

   59 expression: expression T_OR • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 104


State 72

   53 expression: expression T_FAI • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 105


State 73

   44 expression: expression T_NEQUAL • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 106


State 74

   23 statement: T_THROWUP T_LPAREN expression • T_RPAREN
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_RPAREN    shift, and go to state 107
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73


State 75

   11 if_block: T_IMAGINE T_LPAREN • expression T_RPAREN T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN • expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 108


State 76

   14 for_block: T_ONE_BY_ONE T_LPAREN • T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_IDENTIFIER  shift, and go to state 109


State 77

   13 while_block: T_AS_LONG_AS T_LPAREN • expression T_RPAREN T_LCURPAR statements T_RCURPAR

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 110


State 78

    5 block: T_GO control_blocks T_ALL_SET •

    $default  reduce using rule 5 (block)


State 79

    7 control_blocks: control_blocks control_block •

    $default  reduce using rule 7 (control_blocks)


State 80

   60 function_def: T_A_NEW_ONE types T_IDENTIFIER • T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 111


State 81

   37 types: T_WHOLEY_TYPE '[' T_WHOLEY • ']'

    ']'  shift, and go to state 112


State 82

   38 types: T_FLOATY_TYPE '[' T_WHOLEY • ']'

    ']'  shift, and go to state 113


State 83

   39 types: T_STRING_TYPE '[' T_WHOLEY • ']'

    ']'  shift, and go to state 114


State 84

   24 statement: T_RANDO T_LPAREN expression • T_COMMA expression T_RPAREN
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_COMMA     shift, and go to state 115
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73


State 85

   25 statement: T_GIMME T_LPAREN types • T_RPAREN

    T_RPAREN  shift, and go to state 116


State 86

   26 statement: T_JOIN_IN T_LPAREN T_IDENTIFIER • T_COMMA expression T_RPAREN

    T_COMMA  shift, and go to state 117


State 87

   28 declaration: types T_IDENTIFIER T_FAI • expression
   29            | types T_IDENTIFIER T_FAI • function_call

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 54
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression     go to state 118
    function_call  go to state 119


State 88

   61 function_call: T_IDENTIFIER T_LPAREN arg_list T_RPAREN •

    $default  reduce using rule 61 (function_call)


State 89

   66 arg_list: arg_list T_COMMA • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 120


State 90

   32 assignment: T_IDENTIFIER '[' expression ']' • T_FAI expression

    T_FAI  shift, and go to state 121


State 91

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   56           | T_IDENTIFIER '[' expression • ']'
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73
    ']'         shift, and go to state 122


State 92

   55 expression: T_LPAREN expression T_RPAREN •

    $default  reduce using rule 55 (expression)


State 93

   57 expression: T_SIZE_UP T_LPAREN T_IDENTIFIER • T_RPAREN

    T_RPAREN  shift, and go to state 123


State 94

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   47           | expression T_PLUS expression •
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    $default  reduce using rule 47 (expression)


State 95

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   48           | expression T_MINUS expression •
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    $default  reduce using rule 48 (expression)


State 96

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   50           | expression T_MULTIPLY expression •
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    $default  reduce using rule 50 (expression)


State 97

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   49           | expression T_DIVIDE expression •
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    $default  reduce using rule 49 (expression)


State 98

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   51           | expression T_LESS expression •
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    $default  reduce using rule 51 (expression)


State 99

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   52           | expression T_GREATER expression •
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    $default  reduce using rule 52 (expression)


State 100

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   45           | expression T_GEQUAL expression •
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    $default  reduce using rule 45 (expression)


State 101

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   46           | expression T_LEQUAL expression •
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    $default  reduce using rule 46 (expression)


State 102

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   54           | expression T_EQUAL expression •
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    $default  reduce using rule 54 (expression)


State 103

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   58           | expression T_AND expression •
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73

    $default  reduce using rule 58 (expression)


State 104

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression
   59           | expression T_OR expression •

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73

    $default  reduce using rule 59 (expression)


State 105

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   53           | expression T_FAI expression •
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    $default  reduce using rule 53 (expression)


State 106

   44 expression: expression • T_NEQUAL expression
   44           | expression T_NEQUAL expression •
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    $default  reduce using rule 44 (expression)


State 107

   23 statement: T_THROWUP T_LPAREN expression T_RPAREN •

    $default  reduce using rule 23 (statement)


State 108

   11 if_block: T_IMAGINE T_LPAREN expression • T_RPAREN T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression • T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_RPAREN    shift, and go to state 124
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73


State 109

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER • T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_IN  shift, and go to state 125


State 110

   13 while_block: T_AS_LONG_AS T_LPAREN expression • T_RPAREN T_LCURPAR statements T_RCURPAR
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_RPAREN    shift, and go to state 126
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73


State 111

   60 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN • param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    $default  reduce using rule 64 (param_list)

    types       go to state 127
    param_list  go to state 128


State 112

   37 types: T_WHOLEY_TYPE '[' T_WHOLEY ']' •

    $default  reduce using rule 37 (types)


State 113

   38 types: T_FLOATY_TYPE '[' T_WHOLEY ']' •

    $default  reduce using rule 38 (types)


State 114

   39 types: T_STRING_TYPE '[' T_WHOLEY ']' •

    $default  reduce using rule 39 (types)


State 115

   24 statement: T_RANDO T_LPAREN expression T_COMMA • expression T_RPAREN

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 129


State 116

   25 statement: T_GIMME T_LPAREN types T_RPAREN •

    $default  reduce using rule 25 (statement)


State 117

   26 statement: T_JOIN_IN T_LPAREN T_IDENTIFIER T_COMMA • expression T_RPAREN

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 130


State 118

   28 declaration: types T_IDENTIFIER T_FAI expression •
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73

    $default  reduce using rule 28 (declaration)


State 119

   29 declaration: types T_IDENTIFIER T_FAI function_call •

    $default  reduce using rule 29 (declaration)


State 120

   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression
   66 arg_list: arg_list T_COMMA expression •

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73

    $default  reduce using rule 66 (arg_list)


State 121

   32 assignment: T_IDENTIFIER '[' expression ']' T_FAI • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 131


State 122

   56 expression: T_IDENTIFIER '[' expression ']' •

    $default  reduce using rule 56 (expression)


State 123

   57 expression: T_SIZE_UP T_LPAREN T_IDENTIFIER T_RPAREN •

    $default  reduce using rule 57 (expression)


State 124

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN • T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression T_RPAREN • T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 132


State 125

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN • T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 133


State 126

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 134


State 127

   62 param_list: types • T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 135


State 128

   60 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list • T_RPAREN T_LCURPAR statements T_RCURPAR
   63 param_list: param_list • T_COMMA types T_IDENTIFIER

    T_RPAREN  shift, and go to state 136
    T_COMMA   shift, and go to state 137


State 129

   24 statement: T_RANDO T_LPAREN expression T_COMMA expression • T_RPAREN
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_RPAREN    shift, and go to state 138
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73


State 130

   26 statement: T_JOIN_IN T_LPAREN T_IDENTIFIER T_COMMA expression • T_RPAREN
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_RPAREN    shift, and go to state 139
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73


State 131

   32 assignment: T_IDENTIFIER '[' expression ']' T_FAI expression •
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73

    $default  reduce using rule 32 (assignment)


State 132

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR • statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR • statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11
    T_JOIN_IN      shift, and go to state 12

    block          go to state 15
    statements     go to state 140
    statement      go to state 141
    declaration    go to state 17
    assignment     go to state 18
    types          go to state 19
    function_call  go to state 21


State 133

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN • step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    step        go to state 142
    expression  go to state 143


State 134

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR • statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11
    T_JOIN_IN      shift, and go to state 12

    block          go to state 15
    statements     go to state 144
    statement      go to state 141
    declaration    go to state 17
    assignment     go to state 18
    types          go to state 19
    function_call  go to state 21


State 135

   62 param_list: types T_IDENTIFIER •

    $default  reduce using rule 62 (param_list)


State 136

   60 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 145


State 137

   63 param_list: param_list T_COMMA • types T_IDENTIFIER

    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    types  go to state 146


State 138

   24 statement: T_RANDO T_LPAREN expression T_COMMA expression T_RPAREN •

    $default  reduce using rule 24 (statement)


State 139

   26 statement: T_JOIN_IN T_LPAREN T_IDENTIFIER T_COMMA expression T_RPAREN •

    $default  reduce using rule 26 (statement)


State 140

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements • T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements • T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR
   16 statements: statements • statement ';'

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 147
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11
    T_JOIN_IN      shift, and go to state 12

    block          go to state 15
    statement      go to state 148
    declaration    go to state 17
    assignment     go to state 18
    types          go to state 19
    function_call  go to state 21


State 141

   17 statements: statement • ';'

    ';'  shift, and go to state 149


State 142

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step • T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_RPAREN  shift, and go to state 150


State 143

   15 step: expression • T_COMMA expression T_COMMA expression
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_COMMA     shift, and go to state 151
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73


State 144

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR statements • T_RCURPAR
   16 statements: statements • statement ';'

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 152
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11
    T_JOIN_IN      shift, and go to state 12

    block          go to state 15
    statement      go to state 148
    declaration    go to state 17
    assignment     go to state 18
    types          go to state 19
    function_call  go to state 21


State 145

   60 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR • statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11
    T_JOIN_IN      shift, and go to state 12

    block          go to state 15
    statements     go to state 153
    statement      go to state 141
    declaration    go to state 17
    assignment     go to state 18
    types          go to state 19
    function_call  go to state 21


State 146

   63 param_list: param_list T_COMMA types • T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 154


State 147

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR •
   12         | T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR • T_NAH T_LCURPAR statements T_RCURPAR

    T_NAH  shift, and go to state 155

    $default  reduce using rule 11 (if_block)


State 148

   16 statements: statements statement • ';'

    ';'  shift, and go to state 156


State 149

   17 statements: statement ';' •

    $default  reduce using rule 17 (statements)


State 150

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN • T_RPAREN T_LCURPAR statements T_RCURPAR

    T_RPAREN  shift, and go to state 157


State 151

   15 step: expression T_COMMA • expression T_COMMA expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 158


State 152

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 13 (while_block)


State 153

   16 statements: statements • statement ';'
   60 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements • T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 159
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11
    T_JOIN_IN      shift, and go to state 12

    block          go to state 15
    statement      go to state 148
    declaration    go to state 17
    assignment     go to state 18
    types          go to state 19
    function_call  go to state 21


State 154

   63 param_list: param_list T_COMMA types T_IDENTIFIER •

    $default  reduce using rule 63 (param_list)


State 155

   12 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 160


State 156

   16 statements: statements statement ';' •

    $default  reduce using rule 16 (statements)


State 157

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 161


State 158

   15 step: expression T_COMMA expression • T_COMMA expression
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_COMMA     shift, and go to state 162
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73


State 159

   60 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 60 (function_def)


State 160

   12 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR • statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11
    T_JOIN_IN      shift, and go to state 12

    block          go to state 15
    statements     go to state 163
    statement      go to state 141
    declaration    go to state 17
    assignment     go to state 18
    types          go to state 19
    function_call  go to state 21


State 161

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR • statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11
    T_JOIN_IN      shift, and go to state 12

    block          go to state 15
    statements     go to state 164
    statement      go to state 141
    declaration    go to state 17
    assignment     go to state 18
    types          go to state 19
    function_call  go to state 21


State 162

   15 step: expression T_COMMA expression T_COMMA • expression

    T_WHOLEY      shift, and go to state 25
    T_FLOATY      shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_LPAREN      shift, and go to state 29
    T_SIZE_UP     shift, and go to state 30

    expression  go to state 165


State 163

   12 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements • T_RCURPAR
   16 statements: statements • statement ';'

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 166
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11
    T_JOIN_IN      shift, and go to state 12

    block          go to state 15
    statement      go to state 148
    declaration    go to state 17
    assignment     go to state 18
    types          go to state 19
    function_call  go to state 21


State 164

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements • T_RCURPAR
   16 statements: statements • statement ';'

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 167
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11
    T_JOIN_IN      shift, and go to state 12

    block          go to state 15
    statement      go to state 148
    declaration    go to state 17
    assignment     go to state 18
    types          go to state 19
    function_call  go to state 21


State 165

   15 step: expression T_COMMA expression T_COMMA expression •
   44 expression: expression • T_NEQUAL expression
   45           | expression • T_GEQUAL expression
   46           | expression • T_LEQUAL expression
   47           | expression • T_PLUS expression
   48           | expression • T_MINUS expression
   49           | expression • T_DIVIDE expression
   50           | expression • T_MULTIPLY expression
   51           | expression • T_LESS expression
   52           | expression • T_GREATER expression
   53           | expression • T_FAI expression
   54           | expression • T_EQUAL expression
   58           | expression • T_AND expression
   59           | expression • T_OR expression

    T_PLUS      shift, and go to state 61
    T_MINUS     shift, and go to state 62
    T_MULTIPLY  shift, and go to state 63
    T_DIVIDE    shift, and go to state 64
    T_LESS      shift, and go to state 65
    T_GREATER   shift, and go to state 66
    T_GEQUAL    shift, and go to state 67
    T_LEQUAL    shift, and go to state 68
    T_EQUAL     shift, and go to state 69
    T_AND       shift, and go to state 70
    T_OR        shift, and go to state 71
    T_FAI       shift, and go to state 72
    T_NEQUAL    shift, and go to state 73

    $default  reduce using rule 15 (step)


State 166

   12 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 12 (if_block)


State 167

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 14 (for_block)
