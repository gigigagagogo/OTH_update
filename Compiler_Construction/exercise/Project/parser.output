Grammar

    0 $accept: START $end

    1 START: global_declaration
    2      | START global_declaration

    3 global_declaration: function_def
    4                   | statement ';'

    5 block: T_GO control_block T_ALL_SET

    6 control_block: if_block
    7              | while_block
    8              | for_block

    9 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

   10 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR

   11 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN expression optional_step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

   12 optional_step: T_COMMA expression
   13              | ε

   14 statements: statements statement ';'
   15           | statement ';'

   16 statement: declaration
   17          | assignment
   18          | function_call
   19          | block
   20          | T_SENDBACK expression
   21          | T_THROWUP T_LPAREN expression T_RPAREN

   22 declaration: types T_IDENTIFIER T_FAI expression

   23 assignment: T_IDENTIFIER T_FAI expression

   24 types: T_WHOLEY_TYPE
   25      | T_FLOATY_TYPE
   26      | T_STRING_TYPE
   27      | T_ZIP_TYPE

   28 expression: T_WHOLEY
   29           | T_FLOATY
   30           | T_STRING
   31           | T_IDENTIFIER
   32           | expression T_NEQUAL expression
   33           | expression T_GEQUAL expression
   34           | expression T_LEQUAL expression
   35           | expression T_PLUS expression
   36           | expression T_MINUS expression
   37           | expression T_DIVIDE expression
   38           | expression T_MULTIPLY expression
   39           | expression T_LESS expression
   40           | expression T_GREATER expression
   41           | expression T_FAI expression
   42           | expression T_EQUAL expression

   43 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

   44 function_call: T_IDENTIFIER T_LPAREN arg_list T_RPAREN

   45 param_list: types T_IDENTIFIER
   46           | param_list T_COMMA types T_IDENTIFIER
   47           | ε

   48 arg_list: expression
   49         | arg_list T_COMMA expression
   50         | ε


Terminals, with rules where they appear

    $end (0) 0
    ';' (59) 4 14 15
    error (256)
    T_WHOLEY <num> (258) 28
    T_FLOATY <fnum> (259) 29
    T_IDENTIFIER <id> (260) 11 22 23 31 43 44 45 46
    T_STRING <str> (261) 30
    T_PLUS <op> (262) 35
    T_MINUS <op> (263) 36
    T_MULTIPLY <op> (264) 38
    T_DIVIDE <op> (265) 37
    T_LESS <op> (266) 39
    T_GREATER <op> (267) 40
    T_GEQUAL <op> (268) 33
    T_LEQUAL <op> (269) 34
    T_SENDBACK <str> (270) 20
    T_THROWUP <str> (271) 21
    T_GO <str> (272) 5
    T_ALL_SET <str> (273) 5
    T_IMAGINE <str> (274) 9
    T_NAH <str> (275) 9
    T_ONE_BY_ONE <str> (276) 11
    T_AS_LONG_AS <str> (277) 10
    T_IN <str> (278) 11
    T_LPAREN <str> (279) 9 10 11 21 43 44
    T_RPAREN <str> (280) 9 10 11 21 43 44
    T_LCURPAR <str> (281) 9 10 11 43
    T_RCURPAR <str> (282) 9 10 11 43
    T_A_NEW_ONE <str> (283) 43
    T_ZIP_TYPE <str> (284) 27
    T_COMMA <str> (285) 12 46 49
    T_WHOLEY_TYPE <str> (286) 24
    T_FLOATY_TYPE <str> (287) 25
    T_STRING_TYPE <str> (288) 26
    T_EQUAL <str> (289) 42
    T_FAI (290) 22 23 41
    T_NEQUAL (291) 32


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    START <ast> (39)
        on left: 1 2
        on right: 0 2
    global_declaration <ast> (40)
        on left: 3 4
        on right: 1 2
    block <ast> (41)
        on left: 5
        on right: 19
    control_block <ast> (42)
        on left: 6 7 8
        on right: 5
    if_block <ast> (43)
        on left: 9
        on right: 6
    while_block <ast> (44)
        on left: 10
        on right: 7
    for_block <ast> (45)
        on left: 11
        on right: 8
    optional_step <ast> (46)
        on left: 12 13
        on right: 11
    statements <ast> (47)
        on left: 14 15
        on right: 9 10 11 14 43
    statement <ast> (48)
        on left: 16 17 18 19 20 21
        on right: 4 14 15
    declaration <ast> (49)
        on left: 22
        on right: 16
    assignment <ast> (50)
        on left: 23
        on right: 17
    types <ast> (51)
        on left: 24 25 26 27
        on right: 22 43 45 46
    expression <ast> (52)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 9 10 11 12 20 21 22 23 32 33 34 35 36 37 38 39 40 41 42 48 49
    function_def <ast> (53)
        on left: 43
        on right: 3
    function_call <ast> (54)
        on left: 44
        on right: 18
    param_list <ast> (55)
        on left: 45 46 47
        on right: 43 46
    arg_list <ast> (56)
        on left: 48 49 50
        on right: 44 49


State 0

    0 $accept: • START $end

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_A_NEW_ONE    shift, and go to state 5
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    START               go to state 10
    global_declaration  go to state 11
    block               go to state 12
    statement           go to state 13
    declaration         go to state 14
    assignment          go to state 15
    types               go to state 16
    function_def        go to state 17
    function_call       go to state 18


State 1

   23 assignment: T_IDENTIFIER • T_FAI expression
   44 function_call: T_IDENTIFIER • T_LPAREN arg_list T_RPAREN

    T_LPAREN  shift, and go to state 19
    T_FAI     shift, and go to state 20


State 2

   20 statement: T_SENDBACK • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 25


State 3

   21 statement: T_THROWUP • T_LPAREN expression T_RPAREN

    T_LPAREN  shift, and go to state 26


State 4

    5 block: T_GO • control_block T_ALL_SET

    T_IMAGINE     shift, and go to state 27
    T_ONE_BY_ONE  shift, and go to state 28
    T_AS_LONG_AS  shift, and go to state 29

    control_block  go to state 30
    if_block       go to state 31
    while_block    go to state 32
    for_block      go to state 33


State 5

   43 function_def: T_A_NEW_ONE • types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    types  go to state 34


State 6

   27 types: T_ZIP_TYPE •

    $default  reduce using rule 27 (types)


State 7

   24 types: T_WHOLEY_TYPE •

    $default  reduce using rule 24 (types)


State 8

   25 types: T_FLOATY_TYPE •

    $default  reduce using rule 25 (types)


State 9

   26 types: T_STRING_TYPE •

    $default  reduce using rule 26 (types)


State 10

    0 $accept: START • $end
    2 START: START • global_declaration

    $end           shift, and go to state 35
    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_A_NEW_ONE    shift, and go to state 5
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    global_declaration  go to state 36
    block               go to state 12
    statement           go to state 13
    declaration         go to state 14
    assignment          go to state 15
    types               go to state 16
    function_def        go to state 17
    function_call       go to state 18


State 11

    1 START: global_declaration •

    $default  reduce using rule 1 (START)


State 12

   19 statement: block •

    $default  reduce using rule 19 (statement)


State 13

    4 global_declaration: statement • ';'

    ';'  shift, and go to state 37


State 14

   16 statement: declaration •

    $default  reduce using rule 16 (statement)


State 15

   17 statement: assignment •

    $default  reduce using rule 17 (statement)


State 16

   22 declaration: types • T_IDENTIFIER T_FAI expression

    T_IDENTIFIER  shift, and go to state 38


State 17

    3 global_declaration: function_def •

    $default  reduce using rule 3 (global_declaration)


State 18

   18 statement: function_call •

    $default  reduce using rule 18 (statement)


State 19

   44 function_call: T_IDENTIFIER T_LPAREN • arg_list T_RPAREN

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    $default  reduce using rule 50 (arg_list)

    expression  go to state 39
    arg_list    go to state 40


State 20

   23 assignment: T_IDENTIFIER T_FAI • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 41


State 21

   28 expression: T_WHOLEY •

    $default  reduce using rule 28 (expression)


State 22

   29 expression: T_FLOATY •

    $default  reduce using rule 29 (expression)


State 23

   31 expression: T_IDENTIFIER •

    $default  reduce using rule 31 (expression)


State 24

   30 expression: T_STRING •

    $default  reduce using rule 30 (expression)


State 25

   20 statement: T_SENDBACK expression •
   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 20 (statement)


State 26

   21 statement: T_THROWUP T_LPAREN • expression T_RPAREN

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 53


State 27

    9 if_block: T_IMAGINE • T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 54


State 28

   11 for_block: T_ONE_BY_ONE • T_LPAREN T_IDENTIFIER T_IN T_LPAREN expression optional_step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 55


State 29

   10 while_block: T_AS_LONG_AS • T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 56


State 30

    5 block: T_GO control_block • T_ALL_SET

    T_ALL_SET  shift, and go to state 57


State 31

    6 control_block: if_block •

    $default  reduce using rule 6 (control_block)


State 32

    7 control_block: while_block •

    $default  reduce using rule 7 (control_block)


State 33

    8 control_block: for_block •

    $default  reduce using rule 8 (control_block)


State 34

   43 function_def: T_A_NEW_ONE types • T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_IDENTIFIER  shift, and go to state 58


State 35

    0 $accept: START $end •

    $default  accept


State 36

    2 START: START global_declaration •

    $default  reduce using rule 2 (START)


State 37

    4 global_declaration: statement ';' •

    $default  reduce using rule 4 (global_declaration)


State 38

   22 declaration: types T_IDENTIFIER • T_FAI expression

    T_FAI  shift, and go to state 59


State 39

   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression
   48 arg_list: expression •

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 48 (arg_list)


State 40

   44 function_call: T_IDENTIFIER T_LPAREN arg_list • T_RPAREN
   49 arg_list: arg_list • T_COMMA expression

    T_RPAREN  shift, and go to state 60
    T_COMMA   shift, and go to state 61


State 41

   23 assignment: T_IDENTIFIER T_FAI expression •
   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 23 (assignment)


State 42

   35 expression: expression T_PLUS • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 62


State 43

   36 expression: expression T_MINUS • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 63


State 44

   38 expression: expression T_MULTIPLY • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 64


State 45

   37 expression: expression T_DIVIDE • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 65


State 46

   39 expression: expression T_LESS • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 66


State 47

   40 expression: expression T_GREATER • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 67


State 48

   33 expression: expression T_GEQUAL • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 68


State 49

   34 expression: expression T_LEQUAL • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 69


State 50

   42 expression: expression T_EQUAL • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 70


State 51

   41 expression: expression T_FAI • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 71


State 52

   32 expression: expression T_NEQUAL • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 72


State 53

   21 statement: T_THROWUP T_LPAREN expression • T_RPAREN
   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_RPAREN    shift, and go to state 73
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52


State 54

    9 if_block: T_IMAGINE T_LPAREN • expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 74


State 55

   11 for_block: T_ONE_BY_ONE T_LPAREN • T_IDENTIFIER T_IN T_LPAREN expression optional_step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_IDENTIFIER  shift, and go to state 75


State 56

   10 while_block: T_AS_LONG_AS T_LPAREN • expression T_RPAREN T_LCURPAR statements T_RCURPAR

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 76


State 57

    5 block: T_GO control_block T_ALL_SET •

    $default  reduce using rule 5 (block)


State 58

   43 function_def: T_A_NEW_ONE types T_IDENTIFIER • T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 77


State 59

   22 declaration: types T_IDENTIFIER T_FAI • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 78


State 60

   44 function_call: T_IDENTIFIER T_LPAREN arg_list T_RPAREN •

    $default  reduce using rule 44 (function_call)


State 61

   49 arg_list: arg_list T_COMMA • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 79


State 62

   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   35           | expression T_PLUS expression •
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45

    $default  reduce using rule 35 (expression)


State 63

   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   36           | expression T_MINUS expression •
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45

    $default  reduce using rule 36 (expression)


State 64

   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   38           | expression T_MULTIPLY expression •
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    $default  reduce using rule 38 (expression)


State 65

   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   37           | expression T_DIVIDE expression •
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    $default  reduce using rule 37 (expression)


State 66

   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   39           | expression T_LESS expression •
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 39 (expression)


State 67

   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   40           | expression T_GREATER expression •
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 40 (expression)


State 68

   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   33           | expression T_GEQUAL expression •
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 33 (expression)


State 69

   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   34           | expression T_LEQUAL expression •
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 34 (expression)


State 70

   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression
   42           | expression T_EQUAL expression •

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 42 (expression)


State 71

   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   41           | expression T_FAI expression •
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 41 (expression)


State 72

   32 expression: expression • T_NEQUAL expression
   32           | expression T_NEQUAL expression •
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 32 (expression)


State 73

   21 statement: T_THROWUP T_LPAREN expression T_RPAREN •

    $default  reduce using rule 21 (statement)


State 74

    9 if_block: T_IMAGINE T_LPAREN expression • T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR
   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_RPAREN    shift, and go to state 80
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52


State 75

   11 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER • T_IN T_LPAREN expression optional_step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_IN  shift, and go to state 81


State 76

   10 while_block: T_AS_LONG_AS T_LPAREN expression • T_RPAREN T_LCURPAR statements T_RCURPAR
   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_RPAREN    shift, and go to state 82
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52


State 77

   43 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN • param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    $default  reduce using rule 47 (param_list)

    types       go to state 83
    param_list  go to state 84


State 78

   22 declaration: types T_IDENTIFIER T_FAI expression •
   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 22 (declaration)


State 79

   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression
   49 arg_list: arg_list T_COMMA expression •

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 49 (arg_list)


State 80

    9 if_block: T_IMAGINE T_LPAREN expression T_RPAREN • T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 85


State 81

   11 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN • T_LPAREN expression optional_step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 86


State 82

   10 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 87


State 83

   45 param_list: types • T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 88


State 84

   43 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list • T_RPAREN T_LCURPAR statements T_RCURPAR
   46 param_list: param_list • T_COMMA types T_IDENTIFIER

    T_RPAREN  shift, and go to state 89
    T_COMMA   shift, and go to state 90


State 85

    9 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR • statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    block          go to state 12
    statements     go to state 91
    statement      go to state 92
    declaration    go to state 14
    assignment     go to state 15
    types          go to state 16
    function_call  go to state 18


State 86

   11 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN • expression optional_step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 93


State 87

   10 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR • statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    block          go to state 12
    statements     go to state 94
    statement      go to state 92
    declaration    go to state 14
    assignment     go to state 15
    types          go to state 16
    function_call  go to state 18


State 88

   45 param_list: types T_IDENTIFIER •

    $default  reduce using rule 45 (param_list)


State 89

   43 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 95


State 90

   46 param_list: param_list T_COMMA • types T_IDENTIFIER

    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    types  go to state 96


State 91

    9 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements • T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR
   14 statements: statements • statement ';'

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 97
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    block          go to state 12
    statement      go to state 98
    declaration    go to state 14
    assignment     go to state 15
    types          go to state 16
    function_call  go to state 18


State 92

   15 statements: statement • ';'

    ';'  shift, and go to state 99


State 93

   11 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN expression • optional_step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR
   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_COMMA     shift, and go to state 100
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 13 (optional_step)

    optional_step  go to state 101


State 94

   10 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR statements • T_RCURPAR
   14 statements: statements • statement ';'

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 102
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    block          go to state 12
    statement      go to state 98
    declaration    go to state 14
    assignment     go to state 15
    types          go to state 16
    function_call  go to state 18


State 95

   43 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR • statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    block          go to state 12
    statements     go to state 103
    statement      go to state 92
    declaration    go to state 14
    assignment     go to state 15
    types          go to state 16
    function_call  go to state 18


State 96

   46 param_list: param_list T_COMMA types • T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 104


State 97

    9 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR • T_NAH T_LCURPAR statements T_RCURPAR

    T_NAH  shift, and go to state 105


State 98

   14 statements: statements statement • ';'

    ';'  shift, and go to state 106


State 99

   15 statements: statement ';' •

    $default  reduce using rule 15 (statements)


State 100

   12 optional_step: T_COMMA • expression

    T_WHOLEY      shift, and go to state 21
    T_FLOATY      shift, and go to state 22
    T_IDENTIFIER  shift, and go to state 23
    T_STRING      shift, and go to state 24

    expression  go to state 107


State 101

   11 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN expression optional_step • T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_RPAREN  shift, and go to state 108


State 102

   10 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 10 (while_block)


State 103

   14 statements: statements • statement ';'
   43 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements • T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 109
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    block          go to state 12
    statement      go to state 98
    declaration    go to state 14
    assignment     go to state 15
    types          go to state 16
    function_call  go to state 18


State 104

   46 param_list: param_list T_COMMA types T_IDENTIFIER •

    $default  reduce using rule 46 (param_list)


State 105

    9 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 110


State 106

   14 statements: statements statement ';' •

    $default  reduce using rule 14 (statements)


State 107

   12 optional_step: T_COMMA expression •
   32 expression: expression • T_NEQUAL expression
   33           | expression • T_GEQUAL expression
   34           | expression • T_LEQUAL expression
   35           | expression • T_PLUS expression
   36           | expression • T_MINUS expression
   37           | expression • T_DIVIDE expression
   38           | expression • T_MULTIPLY expression
   39           | expression • T_LESS expression
   40           | expression • T_GREATER expression
   41           | expression • T_FAI expression
   42           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 42
    T_MINUS     shift, and go to state 43
    T_MULTIPLY  shift, and go to state 44
    T_DIVIDE    shift, and go to state 45
    T_LESS      shift, and go to state 46
    T_GREATER   shift, and go to state 47
    T_GEQUAL    shift, and go to state 48
    T_LEQUAL    shift, and go to state 49
    T_EQUAL     shift, and go to state 50
    T_FAI       shift, and go to state 51
    T_NEQUAL    shift, and go to state 52

    $default  reduce using rule 12 (optional_step)


State 108

   11 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN expression optional_step T_RPAREN • T_RPAREN T_LCURPAR statements T_RCURPAR

    T_RPAREN  shift, and go to state 111


State 109

   43 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 43 (function_def)


State 110

    9 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR • statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    block          go to state 12
    statements     go to state 112
    statement      go to state 92
    declaration    go to state 14
    assignment     go to state 15
    types          go to state 16
    function_call  go to state 18


State 111

   11 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN expression optional_step T_RPAREN T_RPAREN • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 113


State 112

    9 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements • T_RCURPAR
   14 statements: statements • statement ';'

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 114
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    block          go to state 12
    statement      go to state 98
    declaration    go to state 14
    assignment     go to state 15
    types          go to state 16
    function_call  go to state 18


State 113

   11 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN expression optional_step T_RPAREN T_RPAREN T_LCURPAR • statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    block          go to state 12
    statements     go to state 115
    statement      go to state 92
    declaration    go to state 14
    assignment     go to state 15
    types          go to state 16
    function_call  go to state 18


State 114

    9 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 9 (if_block)


State 115

   11 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN expression optional_step T_RPAREN T_RPAREN T_LCURPAR statements • T_RCURPAR
   14 statements: statements • statement ';'

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 116
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    block          go to state 12
    statement      go to state 98
    declaration    go to state 14
    assignment     go to state 15
    types          go to state 16
    function_call  go to state 18


State 116

   11 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN expression optional_step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 11 (for_block)
