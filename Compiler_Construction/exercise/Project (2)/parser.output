Grammar

    0 $accept: START $end

    1 START: global_declaration
    2      | START global_declaration

    3 global_declaration: function_def
    4                   | statement ';'

    5 block: T_GO control_blocks T_ALL_SET

    6 control_blocks: control_block
    7               | control_blocks control_block

    8 control_block: if_block
    9              | while_block
   10              | for_block

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

   15 step: expression T_COMMA expression T_COMMA expression

   16 statements: statements statement ';'
   17           | statement ';'

   18 statement: declaration
   19          | assignment
   20          | function_call
   21          | block
   22          | T_SENDBACK expression
   23          | T_THROWUP T_LPAREN expression T_RPAREN
   24          | T_RANDO T_LPAREN expression T_COMMA expression T_RPAREN
   25          | T_GIMME T_LPAREN types T_RPAREN

   26 declaration: types T_IDENTIFIER T_FAI expression
   27            | types T_IDENTIFIER T_FAI function_call

   28 assignment: T_IDENTIFIER T_FAI expression
   29           | T_IDENTIFIER T_FAI function_call

   30 types: T_WHOLEY_TYPE
   31      | T_FLOATY_TYPE
   32      | T_STRING_TYPE
   33      | T_ZIP_TYPE

   34 expression: T_WHOLEY
   35           | T_FLOATY
   36           | T_STRING
   37           | T_IDENTIFIER
   38           | expression T_NEQUAL expression
   39           | expression T_GEQUAL expression
   40           | expression T_LEQUAL expression
   41           | expression T_PLUS expression
   42           | expression T_MINUS expression
   43           | expression T_DIVIDE expression
   44           | expression T_MULTIPLY expression
   45           | expression T_LESS expression
   46           | expression T_GREATER expression
   47           | expression T_FAI expression
   48           | expression T_EQUAL expression
   49           | T_LPAREN expression T_RPAREN

   50 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

   51 function_call: T_IDENTIFIER T_LPAREN arg_list T_RPAREN

   52 param_list: types T_IDENTIFIER
   53           | param_list T_COMMA types T_IDENTIFIER
   54           | ε

   55 arg_list: expression
   56         | arg_list T_COMMA expression
   57         | ε


Terminals, with rules where they appear

    $end (0) 0
    ';' (59) 4 16 17
    error (256)
    T_WHOLEY <num> (258) 34
    T_FLOATY <fnum> (259) 35
    T_IDENTIFIER <id> (260) 14 26 27 28 29 37 50 51 52 53
    T_STRING <str> (261) 36
    T_PLUS <op> (262) 41
    T_MINUS <op> (263) 42
    T_MULTIPLY <op> (264) 44
    T_DIVIDE <op> (265) 43
    T_LESS <op> (266) 45
    T_GREATER <op> (267) 46
    T_GEQUAL <op> (268) 39
    T_LEQUAL <op> (269) 40
    T_SENDBACK <str> (270) 22
    T_THROWUP <str> (271) 23
    T_GO <str> (272) 5
    T_ALL_SET <str> (273) 5
    T_IMAGINE <str> (274) 11 12
    T_NAH <str> (275) 12
    T_ONE_BY_ONE <str> (276) 14
    T_AS_LONG_AS <str> (277) 13
    T_IN <str> (278) 14
    T_LPAREN <str> (279) 11 12 13 14 23 24 25 49 50 51
    T_RPAREN <str> (280) 11 12 13 14 23 24 25 49 50 51
    T_LCURPAR <str> (281) 11 12 13 14 50
    T_RCURPAR <str> (282) 11 12 13 14 50
    T_A_NEW_ONE <str> (283) 50
    T_ZIP_TYPE <str> (284) 33
    T_COMMA <str> (285) 15 24 53 56
    T_WHOLEY_TYPE <str> (286) 30
    T_FLOATY_TYPE <str> (287) 31
    T_STRING_TYPE <str> (288) 32
    T_EQUAL <str> (289) 48
    T_RANDO <str> (290) 24
    T_GIMME <str> (291) 25
    T_FAI (292) 26 27 28 29 47
    T_NEQUAL (293) 38


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    START <ast> (41)
        on left: 1 2
        on right: 0 2
    global_declaration <ast> (42)
        on left: 3 4
        on right: 1 2
    block <ast> (43)
        on left: 5
        on right: 21
    control_blocks <ast> (44)
        on left: 6 7
        on right: 5 7
    control_block <ast> (45)
        on left: 8 9 10
        on right: 6 7
    if_block <ast> (46)
        on left: 11 12
        on right: 8
    while_block <ast> (47)
        on left: 13
        on right: 9
    for_block <ast> (48)
        on left: 14
        on right: 10
    step <ast> (49)
        on left: 15
        on right: 14
    statements <ast> (50)
        on left: 16 17
        on right: 11 12 13 14 16 50
    statement <ast> (51)
        on left: 18 19 20 21 22 23 24 25
        on right: 4 16 17
    declaration <ast> (52)
        on left: 26 27
        on right: 18
    assignment <ast> (53)
        on left: 28 29
        on right: 19
    types <ast> (54)
        on left: 30 31 32 33
        on right: 25 26 27 50 52 53
    expression <ast> (55)
        on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
        on right: 11 12 13 15 22 23 24 26 28 38 39 40 41 42 43 44 45 46 47 48 49 55 56
    function_def <ast> (56)
        on left: 50
        on right: 3
    function_call <ast> (57)
        on left: 51
        on right: 20 27 29
    param_list <ast> (58)
        on left: 52 53 54
        on right: 50 53
    arg_list <ast> (59)
        on left: 55 56 57
        on right: 51 56


State 0

    0 $accept: • START $end

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_A_NEW_ONE    shift, and go to state 5
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11

    START               go to state 12
    global_declaration  go to state 13
    block               go to state 14
    statement           go to state 15
    declaration         go to state 16
    assignment          go to state 17
    types               go to state 18
    function_def        go to state 19
    function_call       go to state 20


State 1

   28 assignment: T_IDENTIFIER • T_FAI expression
   29           | T_IDENTIFIER • T_FAI function_call
   51 function_call: T_IDENTIFIER • T_LPAREN arg_list T_RPAREN

    T_LPAREN  shift, and go to state 21
    T_FAI     shift, and go to state 22


State 2

   22 statement: T_SENDBACK • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 28


State 3

   23 statement: T_THROWUP • T_LPAREN expression T_RPAREN

    T_LPAREN  shift, and go to state 29


State 4

    5 block: T_GO • control_blocks T_ALL_SET

    T_IMAGINE     shift, and go to state 30
    T_ONE_BY_ONE  shift, and go to state 31
    T_AS_LONG_AS  shift, and go to state 32

    control_blocks  go to state 33
    control_block   go to state 34
    if_block        go to state 35
    while_block     go to state 36
    for_block       go to state 37


State 5

   50 function_def: T_A_NEW_ONE • types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    types  go to state 38


State 6

   33 types: T_ZIP_TYPE •

    $default  reduce using rule 33 (types)


State 7

   30 types: T_WHOLEY_TYPE •

    $default  reduce using rule 30 (types)


State 8

   31 types: T_FLOATY_TYPE •

    $default  reduce using rule 31 (types)


State 9

   32 types: T_STRING_TYPE •

    $default  reduce using rule 32 (types)


State 10

   24 statement: T_RANDO • T_LPAREN expression T_COMMA expression T_RPAREN

    T_LPAREN  shift, and go to state 39


State 11

   25 statement: T_GIMME • T_LPAREN types T_RPAREN

    T_LPAREN  shift, and go to state 40


State 12

    0 $accept: START • $end
    2 START: START • global_declaration

    $end           shift, and go to state 41
    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_A_NEW_ONE    shift, and go to state 5
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11

    global_declaration  go to state 42
    block               go to state 14
    statement           go to state 15
    declaration         go to state 16
    assignment          go to state 17
    types               go to state 18
    function_def        go to state 19
    function_call       go to state 20


State 13

    1 START: global_declaration •

    $default  reduce using rule 1 (START)


State 14

   21 statement: block •

    $default  reduce using rule 21 (statement)


State 15

    4 global_declaration: statement • ';'

    ';'  shift, and go to state 43


State 16

   18 statement: declaration •

    $default  reduce using rule 18 (statement)


State 17

   19 statement: assignment •

    $default  reduce using rule 19 (statement)


State 18

   26 declaration: types • T_IDENTIFIER T_FAI expression
   27            | types • T_IDENTIFIER T_FAI function_call

    T_IDENTIFIER  shift, and go to state 44


State 19

    3 global_declaration: function_def •

    $default  reduce using rule 3 (global_declaration)


State 20

   20 statement: function_call •

    $default  reduce using rule 20 (statement)


State 21

   51 function_call: T_IDENTIFIER T_LPAREN • arg_list T_RPAREN

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    $default  reduce using rule 57 (arg_list)

    expression  go to state 45
    arg_list    go to state 46


State 22

   28 assignment: T_IDENTIFIER T_FAI • expression
   29           | T_IDENTIFIER T_FAI • function_call

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 47
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression     go to state 48
    function_call  go to state 49


State 23

   34 expression: T_WHOLEY •

    $default  reduce using rule 34 (expression)


State 24

   35 expression: T_FLOATY •

    $default  reduce using rule 35 (expression)


State 25

   37 expression: T_IDENTIFIER •

    $default  reduce using rule 37 (expression)


State 26

   36 expression: T_STRING •

    $default  reduce using rule 36 (expression)


State 27

   49 expression: T_LPAREN • expression T_RPAREN

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 50


State 28

   22 statement: T_SENDBACK expression •
   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61

    $default  reduce using rule 22 (statement)


State 29

   23 statement: T_THROWUP T_LPAREN • expression T_RPAREN

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 62


State 30

   11 if_block: T_IMAGINE • T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE • T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 63


State 31

   14 for_block: T_ONE_BY_ONE • T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 64


State 32

   13 while_block: T_AS_LONG_AS • T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 65


State 33

    5 block: T_GO control_blocks • T_ALL_SET
    7 control_blocks: control_blocks • control_block

    T_ALL_SET     shift, and go to state 66
    T_IMAGINE     shift, and go to state 30
    T_ONE_BY_ONE  shift, and go to state 31
    T_AS_LONG_AS  shift, and go to state 32

    control_block  go to state 67
    if_block       go to state 35
    while_block    go to state 36
    for_block      go to state 37


State 34

    6 control_blocks: control_block •

    $default  reduce using rule 6 (control_blocks)


State 35

    8 control_block: if_block •

    $default  reduce using rule 8 (control_block)


State 36

    9 control_block: while_block •

    $default  reduce using rule 9 (control_block)


State 37

   10 control_block: for_block •

    $default  reduce using rule 10 (control_block)


State 38

   50 function_def: T_A_NEW_ONE types • T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_IDENTIFIER  shift, and go to state 68


State 39

   24 statement: T_RANDO T_LPAREN • expression T_COMMA expression T_RPAREN

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 69


State 40

   25 statement: T_GIMME T_LPAREN • types T_RPAREN

    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    types  go to state 70


State 41

    0 $accept: START $end •

    $default  accept


State 42

    2 START: START global_declaration •

    $default  reduce using rule 2 (START)


State 43

    4 global_declaration: statement ';' •

    $default  reduce using rule 4 (global_declaration)


State 44

   26 declaration: types T_IDENTIFIER • T_FAI expression
   27            | types T_IDENTIFIER • T_FAI function_call

    T_FAI  shift, and go to state 71


State 45

   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression
   55 arg_list: expression •

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61

    $default  reduce using rule 55 (arg_list)


State 46

   51 function_call: T_IDENTIFIER T_LPAREN arg_list • T_RPAREN
   56 arg_list: arg_list • T_COMMA expression

    T_RPAREN  shift, and go to state 72
    T_COMMA   shift, and go to state 73


State 47

   37 expression: T_IDENTIFIER •
   51 function_call: T_IDENTIFIER • T_LPAREN arg_list T_RPAREN

    T_LPAREN  shift, and go to state 21

    $default  reduce using rule 37 (expression)


State 48

   28 assignment: T_IDENTIFIER T_FAI expression •
   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61

    $default  reduce using rule 28 (assignment)


State 49

   29 assignment: T_IDENTIFIER T_FAI function_call •

    $default  reduce using rule 29 (assignment)


State 50

   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression
   49           | T_LPAREN expression • T_RPAREN

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_RPAREN    shift, and go to state 74
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61


State 51

   41 expression: expression T_PLUS • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 75


State 52

   42 expression: expression T_MINUS • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 76


State 53

   44 expression: expression T_MULTIPLY • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 77


State 54

   43 expression: expression T_DIVIDE • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 78


State 55

   45 expression: expression T_LESS • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 79


State 56

   46 expression: expression T_GREATER • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 80


State 57

   39 expression: expression T_GEQUAL • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 81


State 58

   40 expression: expression T_LEQUAL • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 82


State 59

   48 expression: expression T_EQUAL • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 83


State 60

   47 expression: expression T_FAI • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 84


State 61

   38 expression: expression T_NEQUAL • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 85


State 62

   23 statement: T_THROWUP T_LPAREN expression • T_RPAREN
   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_RPAREN    shift, and go to state 86
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61


State 63

   11 if_block: T_IMAGINE T_LPAREN • expression T_RPAREN T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN • expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 87


State 64

   14 for_block: T_ONE_BY_ONE T_LPAREN • T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_IDENTIFIER  shift, and go to state 88


State 65

   13 while_block: T_AS_LONG_AS T_LPAREN • expression T_RPAREN T_LCURPAR statements T_RCURPAR

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 89


State 66

    5 block: T_GO control_blocks T_ALL_SET •

    $default  reduce using rule 5 (block)


State 67

    7 control_blocks: control_blocks control_block •

    $default  reduce using rule 7 (control_blocks)


State 68

   50 function_def: T_A_NEW_ONE types T_IDENTIFIER • T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 90


State 69

   24 statement: T_RANDO T_LPAREN expression • T_COMMA expression T_RPAREN
   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_COMMA     shift, and go to state 91
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61


State 70

   25 statement: T_GIMME T_LPAREN types • T_RPAREN

    T_RPAREN  shift, and go to state 92


State 71

   26 declaration: types T_IDENTIFIER T_FAI • expression
   27            | types T_IDENTIFIER T_FAI • function_call

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 47
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression     go to state 93
    function_call  go to state 94


State 72

   51 function_call: T_IDENTIFIER T_LPAREN arg_list T_RPAREN •

    $default  reduce using rule 51 (function_call)


State 73

   56 arg_list: arg_list T_COMMA • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 95


State 74

   49 expression: T_LPAREN expression T_RPAREN •

    $default  reduce using rule 49 (expression)


State 75

   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   41           | expression T_PLUS expression •
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54

    $default  reduce using rule 41 (expression)


State 76

   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   42           | expression T_MINUS expression •
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54

    $default  reduce using rule 42 (expression)


State 77

   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   44           | expression T_MULTIPLY expression •
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    $default  reduce using rule 44 (expression)


State 78

   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   43           | expression T_DIVIDE expression •
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    $default  reduce using rule 43 (expression)


State 79

   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   45           | expression T_LESS expression •
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61

    $default  reduce using rule 45 (expression)


State 80

   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   46           | expression T_GREATER expression •
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61

    $default  reduce using rule 46 (expression)


State 81

   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   39           | expression T_GEQUAL expression •
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61

    $default  reduce using rule 39 (expression)


State 82

   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   40           | expression T_LEQUAL expression •
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61

    $default  reduce using rule 40 (expression)


State 83

   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression
   48           | expression T_EQUAL expression •

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61

    $default  reduce using rule 48 (expression)


State 84

   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   47           | expression T_FAI expression •
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61

    $default  reduce using rule 47 (expression)


State 85

   38 expression: expression • T_NEQUAL expression
   38           | expression T_NEQUAL expression •
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61

    $default  reduce using rule 38 (expression)


State 86

   23 statement: T_THROWUP T_LPAREN expression T_RPAREN •

    $default  reduce using rule 23 (statement)


State 87

   11 if_block: T_IMAGINE T_LPAREN expression • T_RPAREN T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression • T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR
   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_RPAREN    shift, and go to state 96
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61


State 88

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER • T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_IN  shift, and go to state 97


State 89

   13 while_block: T_AS_LONG_AS T_LPAREN expression • T_RPAREN T_LCURPAR statements T_RCURPAR
   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_RPAREN    shift, and go to state 98
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61


State 90

   50 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN • param_list T_RPAREN T_LCURPAR statements T_RCURPAR

    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    $default  reduce using rule 54 (param_list)

    types       go to state 99
    param_list  go to state 100


State 91

   24 statement: T_RANDO T_LPAREN expression T_COMMA • expression T_RPAREN

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 101


State 92

   25 statement: T_GIMME T_LPAREN types T_RPAREN •

    $default  reduce using rule 25 (statement)


State 93

   26 declaration: types T_IDENTIFIER T_FAI expression •
   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61

    $default  reduce using rule 26 (declaration)


State 94

   27 declaration: types T_IDENTIFIER T_FAI function_call •

    $default  reduce using rule 27 (declaration)


State 95

   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression
   56 arg_list: arg_list T_COMMA expression •

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61

    $default  reduce using rule 56 (arg_list)


State 96

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN • T_LCURPAR statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression T_RPAREN • T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 102


State 97

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN • T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_LPAREN  shift, and go to state 103


State 98

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 104


State 99

   52 param_list: types • T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 105


State 100

   50 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list • T_RPAREN T_LCURPAR statements T_RCURPAR
   53 param_list: param_list • T_COMMA types T_IDENTIFIER

    T_RPAREN  shift, and go to state 106
    T_COMMA   shift, and go to state 107


State 101

   24 statement: T_RANDO T_LPAREN expression T_COMMA expression • T_RPAREN
   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_RPAREN    shift, and go to state 108
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61


State 102

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR • statements T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR • statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11

    block          go to state 14
    statements     go to state 109
    statement      go to state 110
    declaration    go to state 16
    assignment     go to state 17
    types          go to state 18
    function_call  go to state 20


State 103

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN • step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    step        go to state 111
    expression  go to state 112


State 104

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR • statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11

    block          go to state 14
    statements     go to state 113
    statement      go to state 110
    declaration    go to state 16
    assignment     go to state 17
    types          go to state 18
    function_call  go to state 20


State 105

   52 param_list: types T_IDENTIFIER •

    $default  reduce using rule 52 (param_list)


State 106

   50 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 114


State 107

   53 param_list: param_list T_COMMA • types T_IDENTIFIER

    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9

    types  go to state 115


State 108

   24 statement: T_RANDO T_LPAREN expression T_COMMA expression T_RPAREN •

    $default  reduce using rule 24 (statement)


State 109

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements • T_RCURPAR
   12         | T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements • T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR
   16 statements: statements • statement ';'

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 116
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11

    block          go to state 14
    statement      go to state 117
    declaration    go to state 16
    assignment     go to state 17
    types          go to state 18
    function_call  go to state 20


State 110

   17 statements: statement • ';'

    ';'  shift, and go to state 118


State 111

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step • T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR

    T_RPAREN  shift, and go to state 119


State 112

   15 step: expression • T_COMMA expression T_COMMA expression
   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_COMMA     shift, and go to state 120
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61


State 113

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR statements • T_RCURPAR
   16 statements: statements • statement ';'

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 121
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11

    block          go to state 14
    statement      go to state 117
    declaration    go to state 16
    assignment     go to state 17
    types          go to state 18
    function_call  go to state 20


State 114

   50 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR • statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11

    block          go to state 14
    statements     go to state 122
    statement      go to state 110
    declaration    go to state 16
    assignment     go to state 17
    types          go to state 18
    function_call  go to state 20


State 115

   53 param_list: param_list T_COMMA types • T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 123


State 116

   11 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR •
   12         | T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR • T_NAH T_LCURPAR statements T_RCURPAR

    T_NAH  shift, and go to state 124

    $default  reduce using rule 11 (if_block)


State 117

   16 statements: statements statement • ';'

    ';'  shift, and go to state 125


State 118

   17 statements: statement ';' •

    $default  reduce using rule 17 (statements)


State 119

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN • T_RPAREN T_LCURPAR statements T_RCURPAR

    T_RPAREN  shift, and go to state 126


State 120

   15 step: expression T_COMMA • expression T_COMMA expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 127


State 121

   13 while_block: T_AS_LONG_AS T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 13 (while_block)


State 122

   16 statements: statements • statement ';'
   50 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements • T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 128
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11

    block          go to state 14
    statement      go to state 117
    declaration    go to state 16
    assignment     go to state 17
    types          go to state 18
    function_call  go to state 20


State 123

   53 param_list: param_list T_COMMA types T_IDENTIFIER •

    $default  reduce using rule 53 (param_list)


State 124

   12 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 129


State 125

   16 statements: statements statement ';' •

    $default  reduce using rule 16 (statements)


State 126

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN • T_LCURPAR statements T_RCURPAR

    T_LCURPAR  shift, and go to state 130


State 127

   15 step: expression T_COMMA expression • T_COMMA expression
   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_COMMA     shift, and go to state 131
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61


State 128

   50 function_def: T_A_NEW_ONE types T_IDENTIFIER T_LPAREN param_list T_RPAREN T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 50 (function_def)


State 129

   12 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR • statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11

    block          go to state 14
    statements     go to state 132
    statement      go to state 110
    declaration    go to state 16
    assignment     go to state 17
    types          go to state 18
    function_call  go to state 20


State 130

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR • statements T_RCURPAR

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11

    block          go to state 14
    statements     go to state 133
    statement      go to state 110
    declaration    go to state 16
    assignment     go to state 17
    types          go to state 18
    function_call  go to state 20


State 131

   15 step: expression T_COMMA expression T_COMMA • expression

    T_WHOLEY      shift, and go to state 23
    T_FLOATY      shift, and go to state 24
    T_IDENTIFIER  shift, and go to state 25
    T_STRING      shift, and go to state 26
    T_LPAREN      shift, and go to state 27

    expression  go to state 134


State 132

   12 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements • T_RCURPAR
   16 statements: statements • statement ';'

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 135
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11

    block          go to state 14
    statement      go to state 117
    declaration    go to state 16
    assignment     go to state 17
    types          go to state 18
    function_call  go to state 20


State 133

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements • T_RCURPAR
   16 statements: statements • statement ';'

    T_IDENTIFIER   shift, and go to state 1
    T_SENDBACK     shift, and go to state 2
    T_THROWUP      shift, and go to state 3
    T_GO           shift, and go to state 4
    T_RCURPAR      shift, and go to state 136
    T_ZIP_TYPE     shift, and go to state 6
    T_WHOLEY_TYPE  shift, and go to state 7
    T_FLOATY_TYPE  shift, and go to state 8
    T_STRING_TYPE  shift, and go to state 9
    T_RANDO        shift, and go to state 10
    T_GIMME        shift, and go to state 11

    block          go to state 14
    statement      go to state 117
    declaration    go to state 16
    assignment     go to state 17
    types          go to state 18
    function_call  go to state 20


State 134

   15 step: expression T_COMMA expression T_COMMA expression •
   38 expression: expression • T_NEQUAL expression
   39           | expression • T_GEQUAL expression
   40           | expression • T_LEQUAL expression
   41           | expression • T_PLUS expression
   42           | expression • T_MINUS expression
   43           | expression • T_DIVIDE expression
   44           | expression • T_MULTIPLY expression
   45           | expression • T_LESS expression
   46           | expression • T_GREATER expression
   47           | expression • T_FAI expression
   48           | expression • T_EQUAL expression

    T_PLUS      shift, and go to state 51
    T_MINUS     shift, and go to state 52
    T_MULTIPLY  shift, and go to state 53
    T_DIVIDE    shift, and go to state 54
    T_LESS      shift, and go to state 55
    T_GREATER   shift, and go to state 56
    T_GEQUAL    shift, and go to state 57
    T_LEQUAL    shift, and go to state 58
    T_EQUAL     shift, and go to state 59
    T_FAI       shift, and go to state 60
    T_NEQUAL    shift, and go to state 61

    $default  reduce using rule 15 (step)


State 135

   12 if_block: T_IMAGINE T_LPAREN expression T_RPAREN T_LCURPAR statements T_RCURPAR T_NAH T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 12 (if_block)


State 136

   14 for_block: T_ONE_BY_ONE T_LPAREN T_IDENTIFIER T_IN T_LPAREN step T_RPAREN T_RPAREN T_LCURPAR statements T_RCURPAR •

    $default  reduce using rule 14 (for_block)
