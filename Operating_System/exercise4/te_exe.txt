a) Which of the following components of program state are shared across threads in a multi-threaded process?
	-Register values - No
	-Heap memory - Yes
	-Global variables - Yes
	-Stack memory - No
Ogni thread ha il proprio registro, stack e PC. Il resto è condivido
b) A system with two dual-core processors has four processors available for scheduling. A CPU-
intensive application is running on this system. All input is performed at program start-up,
when a single file must be opened. Similarly, all output is performed just before the program
terminates, when the program results must be written to a single file. Between start-up and
termination, the program is entirely CPU-bound. Your task is to improve the performance
of this application by multithreading it. The application runs on a system that uses the
one-to-one threading model (each user thread maps to a kernel thread).
- How many threads will you create to perform the input and output? Explain.
	2 thread, uno per gestire l'input e uno l'output. 2 perche l'input e output possono essere eseguiti
	contemporaneamente al lavoro della CPU e perché le operazioni potrebbero essere pesanti
- How many threads will you create for the CPU-intensive portion of the application?
	2 thread cosi da poter parallelizzare il lavoro.

c)
  - Not all cores are fully utilized because the number of kernel threads is less than the available cores.
  - Each processing core is matched to one kernel thread, ensuring efficient utilization of all cores.
  - Kernel threads compete for the processing cores, leading to context switching at the kernel level.
Ogni core esegue un kernel thread

4.4 b)
	- 6 processi
	- 2 thread
    c) 
	- 5
	- 0

